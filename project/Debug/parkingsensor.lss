
parkingsensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e4  00800100  00002426  000024ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002426  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000080  008001e4  008001e4  0000259e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000259e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000025d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00002610  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005b4f  00000000  00000000  000027d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000da0  00000000  00000000  0000831f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002093  00000000  00000000  000090bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000048c  00000000  00000000  0000b154  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000737  00000000  00000000  0000b5e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a49  00000000  00000000  0000bd17  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  0000d760  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 d8 0e 	jmp	0x1db0	; 0x1db0 <__vector_1>
       8:	0c 94 98 0e 	jmp	0x1d30	; 0x1d30 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 18 0f 	jmp	0x1e30	; 0x1e30 <__vector_9>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__vector_18>
      4c:	0c 94 e6 0f 	jmp	0x1fcc	; 0x1fcc <__vector_19>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 e2       	ldi	r30, 0x26	; 38
      7c:	f4 e2       	ldi	r31, 0x24	; 36
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a4 3e       	cpi	r26, 0xE4	; 228
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a4 ee       	ldi	r26, 0xE4	; 228
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a4 36       	cpi	r26, 0x64	; 100
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <main>
      9e:	0c 94 11 12 	jmp	0x2422	; 0x2422 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <GPIO_config_output>:

void GPIO_config_input_pullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
    	*reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
    	*reg_name++;				// Change pointer to Data Register
    	*reg_name = *reg_name | (1<<pin_num);  	// Data Register
      a6:	fc 01       	movw	r30, r24
      a8:	40 81       	ld	r20, Z
      aa:	21 e0       	ldi	r18, 0x01	; 1
      ac:	30 e0       	ldi	r19, 0x00	; 0
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <GPIO_config_output+0xe>
      b0:	22 0f       	add	r18, r18
      b2:	33 1f       	adc	r19, r19
      b4:	6a 95       	dec	r22
      b6:	e2 f7       	brpl	.-8      	; 0xb0 <GPIO_config_output+0xa>
      b8:	24 2b       	or	r18, r20
      ba:	20 83       	st	Z, r18
      bc:	08 95       	ret

000000be <GPIO_config_input_nopull>:
      be:	fc 01       	movw	r30, r24
      c0:	80 81       	ld	r24, Z
      c2:	21 e0       	ldi	r18, 0x01	; 1
      c4:	30 e0       	ldi	r19, 0x00	; 0
      c6:	02 c0       	rjmp	.+4      	; 0xcc <GPIO_config_input_nopull+0xe>
      c8:	22 0f       	add	r18, r18
      ca:	33 1f       	adc	r19, r19
      cc:	6a 95       	dec	r22
      ce:	e2 f7       	brpl	.-8      	; 0xc8 <GPIO_config_input_nopull+0xa>
      d0:	20 95       	com	r18
      d2:	82 23       	and	r24, r18
      d4:	80 83       	st	Z, r24
      d6:	80 81       	ld	r24, Z
      d8:	81 81       	ldd	r24, Z+1	; 0x01
      da:	28 23       	and	r18, r24
      dc:	21 83       	std	Z+1, r18	; 0x01
      de:	08 95       	ret

000000e0 <GPIO_write_low>:
}


void GPIO_write_low(volatile uint8_t *reg_name, uint8_t pin_num)
{
      e0:	fc 01       	movw	r30, r24
    	*reg_name = *reg_name & ~(1<<pin_num);	// Data Direction Register
      e2:	90 81       	ld	r25, Z
      e4:	21 e0       	ldi	r18, 0x01	; 1
      e6:	30 e0       	ldi	r19, 0x00	; 0
      e8:	02 c0       	rjmp	.+4      	; 0xee <GPIO_write_low+0xe>
      ea:	22 0f       	add	r18, r18
      ec:	33 1f       	adc	r19, r19
      ee:	6a 95       	dec	r22
      f0:	e2 f7       	brpl	.-8      	; 0xea <GPIO_write_low+0xa>
      f2:	20 95       	com	r18
      f4:	29 23       	and	r18, r25
      f6:	20 83       	st	Z, r18
      f8:	08 95       	ret

000000fa <GPIO_write_high>:
}

void GPIO_write_high(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name | (1<<pin_num);	// Data Direction Register
      fa:	fc 01       	movw	r30, r24
      fc:	40 81       	ld	r20, Z
      fe:	21 e0       	ldi	r18, 0x01	; 1
     100:	30 e0       	ldi	r19, 0x00	; 0
     102:	02 c0       	rjmp	.+4      	; 0x108 <GPIO_write_high+0xe>
     104:	22 0f       	add	r18, r18
     106:	33 1f       	adc	r19, r19
     108:	6a 95       	dec	r22
     10a:	e2 f7       	brpl	.-8      	; 0x104 <GPIO_write_high+0xa>
     10c:	24 2b       	or	r18, r20
     10e:	20 83       	st	Z, r18
     110:	08 95       	ret

00000112 <GPIO_toggle>:
}

void GPIO_toggle(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name ^ (1<<pin_num);   // Data Direction Register
     112:	fc 01       	movw	r30, r24
     114:	40 81       	ld	r20, Z
     116:	21 e0       	ldi	r18, 0x01	; 1
     118:	30 e0       	ldi	r19, 0x00	; 0
     11a:	02 c0       	rjmp	.+4      	; 0x120 <GPIO_toggle+0xe>
     11c:	22 0f       	add	r18, r18
     11e:	33 1f       	adc	r19, r19
     120:	6a 95       	dec	r22
     122:	e2 f7       	brpl	.-8      	; 0x11c <GPIO_toggle+0xa>
     124:	24 27       	eor	r18, r20
     126:	20 83       	st	Z, r18
     128:	08 95       	ret

0000012a <GPIO_read>:
}

uint8_t GPIO_read(volatile uint8_t *reg_name, uint8_t pin_num)
{
	if (bit_is_clear(*reg_name,pin_num))	//Check data direction register
     12a:	fc 01       	movw	r30, r24
     12c:	80 81       	ld	r24, Z
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	02 c0       	rjmp	.+4      	; 0x136 <GPIO_read+0xc>
     132:	95 95       	asr	r25
     134:	87 95       	ror	r24
     136:	6a 95       	dec	r22
     138:	e2 f7       	brpl	.-8      	; 0x132 <GPIO_read+0x8>
    	}
	else
	{
		return 1;
	}
}
     13a:	81 70       	andi	r24, 0x01	; 1
     13c:	08 95       	ret

0000013e <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) )
    {
        lcd_putc(c);
    }
}/* lcd_puts_p */
     13e:	29 9a       	sbi	0x05, 1	; 5
     140:	85 e0       	ldi	r24, 0x05	; 5
     142:	8a 95       	dec	r24
     144:	f1 f7       	brne	.-4      	; 0x142 <toggle_e+0x4>
     146:	00 00       	nop
     148:	29 98       	cbi	0x05, 1	; 5
     14a:	08 95       	ret

0000014c <lcd_write>:
     14c:	cf 93       	push	r28
     14e:	c8 2f       	mov	r28, r24
     150:	66 23       	and	r22, r22
     152:	11 f0       	breq	.+4      	; 0x158 <lcd_write+0xc>
     154:	28 9a       	sbi	0x05, 0	; 5
     156:	01 c0       	rjmp	.+2      	; 0x15a <lcd_write+0xe>
     158:	28 98       	cbi	0x05, 0	; 5
     15a:	54 9a       	sbi	0x0a, 4	; 10
     15c:	55 9a       	sbi	0x0a, 5	; 10
     15e:	56 9a       	sbi	0x0a, 6	; 10
     160:	57 9a       	sbi	0x0a, 7	; 10
     162:	5f 98       	cbi	0x0b, 7	; 11
     164:	5e 98       	cbi	0x0b, 6	; 11
     166:	5d 98       	cbi	0x0b, 5	; 11
     168:	5c 98       	cbi	0x0b, 4	; 11
     16a:	cc 23       	and	r28, r28
     16c:	0c f4       	brge	.+2      	; 0x170 <lcd_write+0x24>
     16e:	5f 9a       	sbi	0x0b, 7	; 11
     170:	c6 fd       	sbrc	r28, 6
     172:	5e 9a       	sbi	0x0b, 6	; 11
     174:	c5 fd       	sbrc	r28, 5
     176:	5d 9a       	sbi	0x0b, 5	; 11
     178:	c4 fd       	sbrc	r28, 4
     17a:	5c 9a       	sbi	0x0b, 4	; 11
     17c:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     180:	5f 98       	cbi	0x0b, 7	; 11
     182:	5e 98       	cbi	0x0b, 6	; 11
     184:	5d 98       	cbi	0x0b, 5	; 11
     186:	5c 98       	cbi	0x0b, 4	; 11
     188:	c3 fd       	sbrc	r28, 3
     18a:	5f 9a       	sbi	0x0b, 7	; 11
     18c:	c2 fd       	sbrc	r28, 2
     18e:	5e 9a       	sbi	0x0b, 6	; 11
     190:	c1 fd       	sbrc	r28, 1
     192:	5d 9a       	sbi	0x0b, 5	; 11
     194:	c0 fd       	sbrc	r28, 0
     196:	5c 9a       	sbi	0x0b, 4	; 11
     198:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     19c:	5c 9a       	sbi	0x0b, 4	; 11
     19e:	5d 9a       	sbi	0x0b, 5	; 11
     1a0:	5e 9a       	sbi	0x0b, 6	; 11
     1a2:	5f 9a       	sbi	0x0b, 7	; 11
     1a4:	87 eb       	ldi	r24, 0xB7	; 183
     1a6:	9b e0       	ldi	r25, 0x0B	; 11
     1a8:	01 97       	sbiw	r24, 0x01	; 1
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <lcd_write+0x5c>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <lcd_write+0x62>
     1ae:	00 00       	nop
     1b0:	cf 91       	pop	r28
     1b2:	08 95       	ret

000001b4 <lcd_command>:
     1b4:	60 e0       	ldi	r22, 0x00	; 0
     1b6:	0e 94 a6 00 	call	0x14c	; 0x14c <lcd_write>
     1ba:	08 95       	ret

000001bc <lcd_data>:
     1bc:	61 e0       	ldi	r22, 0x01	; 1
     1be:	0e 94 a6 00 	call	0x14c	; 0x14c <lcd_write>
     1c2:	08 95       	ret

000001c4 <lcd_gotoxy>:
     1c4:	61 11       	cpse	r22, r1
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <lcd_gotoxy+0xc>
     1c8:	80 58       	subi	r24, 0x80	; 128
     1ca:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
     1ce:	08 95       	ret
     1d0:	80 54       	subi	r24, 0x40	; 64
     1d2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
     1d6:	08 95       	ret

000001d8 <lcd_clrscr>:
     1d8:	81 e0       	ldi	r24, 0x01	; 1
     1da:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
     1de:	08 95       	ret

000001e0 <lcd_putc>:
     1e0:	61 e0       	ldi	r22, 0x01	; 1
     1e2:	0e 94 a6 00 	call	0x14c	; 0x14c <lcd_write>
     1e6:	08 95       	ret

000001e8 <lcd_puts>:
     1e8:	cf 93       	push	r28
     1ea:	df 93       	push	r29
     1ec:	ec 01       	movw	r28, r24
     1ee:	21 96       	adiw	r28, 0x01	; 1
     1f0:	fc 01       	movw	r30, r24
     1f2:	80 81       	ld	r24, Z
     1f4:	88 23       	and	r24, r24
     1f6:	29 f0       	breq	.+10     	; 0x202 <lcd_puts+0x1a>
     1f8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
     1fc:	89 91       	ld	r24, Y+
     1fe:	81 11       	cpse	r24, r1
     200:	fb cf       	rjmp	.-10     	; 0x1f8 <lcd_puts+0x10>
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	08 95       	ret

00000208 <lcd_init>:
*                  LCD_DISP_ON_CURSOR      display on, cursor on
*                  LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
*  Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     208:	cf 93       	push	r28
     20a:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     20c:	20 9a       	sbi	0x04, 0	; 4
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     20e:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     210:	21 9a       	sbi	0x04, 1	; 4
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     212:	54 9a       	sbi	0x0a, 4	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     214:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     216:	56 9a       	sbi	0x0a, 6	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     218:	57 9a       	sbi	0x0a, 7	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     21a:	8f ef       	ldi	r24, 0xFF	; 255
     21c:	99 ef       	ldi	r25, 0xF9	; 249
     21e:	01 97       	sbiw	r24, 0x01	; 1
     220:	f1 f7       	brne	.-4      	; 0x21e <lcd_init+0x16>
     222:	00 c0       	rjmp	.+0      	; 0x224 <lcd_init+0x1c>
     224:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP); /* wait 16ms or more after power-on       */

    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN); // LCD_FUNCTION>>4;
     226:	5d 9a       	sbi	0x0b, 5	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN); // LCD_FUNCTION_8BIT>>4;
     228:	5c 9a       	sbi	0x0b, 4	; 11
    lcd_e_toggle();
     22a:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     22e:	8f e1       	ldi	r24, 0x1F	; 31
     230:	9e e4       	ldi	r25, 0x4E	; 78
     232:	01 97       	sbiw	r24, 0x01	; 1
     234:	f1 f7       	brne	.-4      	; 0x232 <lcd_init+0x2a>
     236:	00 c0       	rjmp	.+0      	; 0x238 <lcd_init+0x30>
     238:	00 00       	nop
    delay(LCD_DELAY_INIT); /* delay, busy flag can't be checked here */

    /* repeat last command */
    lcd_e_toggle();
     23a:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     23e:	8f ef       	ldi	r24, 0xFF	; 255
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <lcd_init+0x3a>
     246:	00 c0       	rjmp	.+0      	; 0x248 <lcd_init+0x40>
     248:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* repeat last command a third time */
    lcd_e_toggle();
     24a:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     24e:	8f ef       	ldi	r24, 0xFF	; 255
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	01 97       	sbiw	r24, 0x01	; 1
     254:	f1 f7       	brne	.-4      	; 0x252 <lcd_init+0x4a>
     256:	00 c0       	rjmp	.+0      	; 0x258 <lcd_init+0x50>
     258:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN); // LCD_FUNCTION_4BIT_1LINE>>4
     25a:	5c 98       	cbi	0x0b, 4	; 11
    lcd_e_toggle();
     25c:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     260:	8f ef       	ldi	r24, 0xFF	; 255
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <lcd_init+0x5c>
     268:	00 c0       	rjmp	.+0      	; 0x26a <lcd_init+0x62>
     26a:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
    lcd_command(KS0073_4LINES_MODE);
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
    #else
    lcd_command(LCD_FUNCTION_DEFAULT); /* function set: display lines  */
     26c:	88 e2       	ldi	r24, 0x28	; 40
     26e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    #endif
    lcd_command(LCD_DISP_OFF);     /* display off                  */
     272:	88 e0       	ldi	r24, 0x08	; 8
     274:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    lcd_clrscr();                  /* display clear                */
     278:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT); /* set entry mode               */
     27c:	86 e0       	ldi	r24, 0x06	; 6
     27e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    lcd_command(dispAttr);         /* display/cursor control       */
     282:	8c 2f       	mov	r24, r28
     284:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
}/* lcd_init */
     288:	cf 91       	pop	r28
     28a:	08 95       	ret

0000028c <Display_dist>:
#include "project_functions.h"
//display distances to sensor[id]


void Display_dist(uint8_t id, float dist[], char string[])
{
     28c:	cf 92       	push	r12
     28e:	df 92       	push	r13
     290:	ef 92       	push	r14
     292:	ff 92       	push	r15
     294:	1f 93       	push	r17
     296:	cf 93       	push	r28
     298:	df 93       	push	r29
     29a:	18 2f       	mov	r17, r24
     29c:	ea 01       	movw	r28, r20
	if (dist[id]<10)
     29e:	fb 01       	movw	r30, r22
     2a0:	84 e0       	ldi	r24, 0x04	; 4
     2a2:	18 9f       	mul	r17, r24
     2a4:	e0 0d       	add	r30, r0
     2a6:	f1 1d       	adc	r31, r1
     2a8:	11 24       	eor	r1, r1
     2aa:	c0 80       	ld	r12, Z
     2ac:	d1 80       	ldd	r13, Z+1	; 0x01
     2ae:	e2 80       	ldd	r14, Z+2	; 0x02
     2b0:	f3 80       	ldd	r15, Z+3	; 0x03
     2b2:	20 e0       	ldi	r18, 0x00	; 0
     2b4:	30 e0       	ldi	r19, 0x00	; 0
     2b6:	40 e2       	ldi	r20, 0x20	; 32
     2b8:	51 e4       	ldi	r21, 0x41	; 65
     2ba:	c7 01       	movw	r24, r14
     2bc:	b6 01       	movw	r22, r12
     2be:	0e 94 ba 10 	call	0x2174	; 0x2174 <__cmpsf2>
     2c2:	88 23       	and	r24, r24
     2c4:	6c f4       	brge	.+26     	; 0x2e0 <Display_dist+0x54>
	{
		lcd_gotoxy(14,id);		//set position to hundrets
     2c6:	61 2f       	mov	r22, r17
     2c8:	8e e0       	ldi	r24, 0x0E	; 14
     2ca:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("  ");					//clear hundrets and tenths
     2ce:	8f e6       	ldi	r24, 0x6F	; 111
     2d0:	91 e0       	ldi	r25, 0x01	; 1
     2d2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
		lcd_gotoxy(16, id);		//go to ones
     2d6:	61 2f       	mov	r22, r17
     2d8:	80 e1       	ldi	r24, 0x10	; 16
     2da:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
     2de:	25 c0       	rjmp	.+74     	; 0x32a <Display_dist+0x9e>
	}
	
	else if (dist[id]>=10 && dist[id]<100)
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	40 e2       	ldi	r20, 0x20	; 32
     2e6:	51 e4       	ldi	r21, 0x41	; 65
     2e8:	c7 01       	movw	r24, r14
     2ea:	b6 01       	movw	r22, r12
     2ec:	0e 94 6a 11 	call	0x22d4	; 0x22d4 <__gesf2>
     2f0:	88 23       	and	r24, r24
     2f2:	bc f0       	brlt	.+46     	; 0x322 <Display_dist+0x96>
     2f4:	20 e0       	ldi	r18, 0x00	; 0
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	48 ec       	ldi	r20, 0xC8	; 200
     2fa:	52 e4       	ldi	r21, 0x42	; 66
     2fc:	c7 01       	movw	r24, r14
     2fe:	b6 01       	movw	r22, r12
     300:	0e 94 ba 10 	call	0x2174	; 0x2174 <__cmpsf2>
     304:	88 23       	and	r24, r24
     306:	6c f4       	brge	.+26     	; 0x322 <Display_dist+0x96>
	{
		lcd_gotoxy(14,id);		//set position to hundrets
     308:	61 2f       	mov	r22, r17
     30a:	8e e0       	ldi	r24, 0x0E	; 14
     30c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts(" ");					//clear hundrets
     310:	80 e7       	ldi	r24, 0x70	; 112
     312:	91 e0       	ldi	r25, 0x01	; 1
     314:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
		lcd_gotoxy(15, id);		//set position to tenths
     318:	61 2f       	mov	r22, r17
     31a:	8f e0       	ldi	r24, 0x0F	; 15
     31c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
     320:	04 c0       	rjmp	.+8      	; 0x32a <Display_dist+0x9e>
	}
	else
	{
		lcd_gotoxy(14, id);		//set position to hundrets
     322:	61 2f       	mov	r22, r17
     324:	8e e0       	ldi	r24, 0x0E	; 14
     326:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
	}
	lcd_puts(string);				//display distance on lcd
     32a:	ce 01       	movw	r24, r28
     32c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
}
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	1f 91       	pop	r17
     336:	ff 90       	pop	r15
     338:	ef 90       	pop	r14
     33a:	df 90       	pop	r13
     33c:	cf 90       	pop	r12
     33e:	08 95       	ret

00000340 <Update_warning>:
//update warning message based on smaller distance
void Update_warning(int sm_dist)
{

	if (sm_dist>=400)
     340:	80 39       	cpi	r24, 0x90	; 144
     342:	21 e0       	ldi	r18, 0x01	; 1
     344:	92 07       	cpc	r25, r18
     346:	7c f0       	brlt	.+30     	; 0x366 <Update_warning+0x26>
	{
		LEDs_off();
     348:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <LEDs_off>
		LED_toggle(1);
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <LED_toggle>
		lcd_gotoxy(24, 2);
     354:	62 e0       	ldi	r22, 0x02	; 2
     356:	88 e1       	ldi	r24, 0x18	; 24
     358:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("ALL CLEAR!");
     35c:	81 e3       	ldi	r24, 0x31	; 49
     35e:	91 e0       	ldi	r25, 0x01	; 1
     360:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     364:	08 95       	ret
	}

	else if (sm_dist <= 400 && sm_dist > 200)
     366:	9c 01       	movw	r18, r24
     368:	29 5c       	subi	r18, 0xC9	; 201
     36a:	31 09       	sbc	r19, r1
     36c:	28 3c       	cpi	r18, 0xC8	; 200
     36e:	31 05       	cpc	r19, r1
     370:	78 f4       	brcc	.+30     	; 0x390 <Update_warning+0x50>
	{
		LEDs_off();
     372:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <LEDs_off>
		LED_toggle(2);
     376:	82 e0       	ldi	r24, 0x02	; 2
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <LED_toggle>
		lcd_gotoxy(24, 2);
     37e:	62 e0       	ldi	r22, 0x02	; 2
     380:	88 e1       	ldi	r24, 0x18	; 24
     382:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("ALL CLEAR!");
     386:	81 e3       	ldi	r24, 0x31	; 49
     388:	91 e0       	ldi	r25, 0x01	; 1
     38a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     38e:	08 95       	ret
	}
	else if (sm_dist <= 200 && sm_dist > 100)
     390:	9c 01       	movw	r18, r24
     392:	25 56       	subi	r18, 0x65	; 101
     394:	31 09       	sbc	r19, r1
     396:	24 36       	cpi	r18, 0x64	; 100
     398:	31 05       	cpc	r19, r1
     39a:	78 f4       	brcc	.+30     	; 0x3ba <Update_warning+0x7a>
	{
		LEDs_off();
     39c:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <LEDs_off>
		LED_toggle(3);
     3a0:	83 e0       	ldi	r24, 0x03	; 3
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <LED_toggle>
		lcd_gotoxy(24, 2);
     3a8:	62 e0       	ldi	r22, 0x02	; 2
     3aa:	88 e1       	ldi	r24, 0x18	; 24
     3ac:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("PRIHORIVA!");
     3b0:	8c e3       	ldi	r24, 0x3C	; 60
     3b2:	91 e0       	ldi	r25, 0x01	; 1
     3b4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     3b8:	08 95       	ret
	}

	else if (sm_dist <= 100 && sm_dist > 50)
     3ba:	9c 01       	movw	r18, r24
     3bc:	23 53       	subi	r18, 0x33	; 51
     3be:	31 09       	sbc	r19, r1
     3c0:	22 33       	cpi	r18, 0x32	; 50
     3c2:	31 05       	cpc	r19, r1
     3c4:	78 f4       	brcc	.+30     	; 0x3e4 <Update_warning+0xa4>
	{
		LEDs_off();
     3c6:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <LEDs_off>
		LED_toggle(4);
     3ca:	84 e0       	ldi	r24, 0x04	; 4
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <LED_toggle>
		lcd_gotoxy(24, 2);
     3d2:	62 e0       	ldi	r22, 0x02	; 2
     3d4:	88 e1       	ldi	r24, 0x18	; 24
     3d6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("!!!SLOW!!!");
     3da:	87 e4       	ldi	r24, 0x47	; 71
     3dc:	91 e0       	ldi	r25, 0x01	; 1
     3de:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     3e2:	08 95       	ret
	}
	else if (sm_dist <= 50 )
     3e4:	c3 97       	sbiw	r24, 0x33	; 51
     3e6:	74 f4       	brge	.+28     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
	{
		LEDs_off();
     3e8:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <LEDs_off>
		LED_toggle(5);
     3ec:	85 e0       	ldi	r24, 0x05	; 5
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <LED_toggle>
		lcd_gotoxy(24, 2);
     3f4:	62 e0       	ldi	r22, 0x02	; 2
     3f6:	88 e1       	ldi	r24, 0x18	; 24
     3f8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("!!!STOP!!!");
     3fc:	82 e5       	ldi	r24, 0x52	; 82
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     404:	08 95       	ret

00000406 <LoadBar>:

}

//displays bar on lcd based on the smaller distance
void LoadBar(int distance){
	if (distance>=500)
     406:	84 3f       	cpi	r24, 0xF4	; 244
     408:	21 e0       	ldi	r18, 0x01	; 1
     40a:	92 07       	cpc	r25, r18
     40c:	4c f0       	brlt	.+18     	; 0x420 <LoadBar+0x1a>
	{
		lcd_gotoxy(20,0);
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	84 e1       	ldi	r24, 0x14	; 20
     412:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     416:	8d e5       	ldi	r24, 0x5D	; 93
     418:	91 e0       	ldi	r25, 0x01	; 1
     41a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     41e:	08 95       	ret
	}
	else if (distance<=500 && distance>490)
     420:	9c 01       	movw	r18, r24
     422:	2b 5e       	subi	r18, 0xEB	; 235
     424:	31 40       	sbci	r19, 0x01	; 1
     426:	2a 30       	cpi	r18, 0x0A	; 10
     428:	31 05       	cpc	r19, r1
     42a:	80 f4       	brcc	.+32     	; 0x44c <LoadBar+0x46>
	{
		lcd_gotoxy(20,0);
     42c:	60 e0       	ldi	r22, 0x00	; 0
     42e:	84 e1       	ldi	r24, 0x14	; 20
     430:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     434:	81 e0       	ldi	r24, 0x01	; 1
     436:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     43a:	60 e0       	ldi	r22, 0x00	; 0
     43c:	85 e1       	ldi	r24, 0x15	; 21
     43e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     442:	8d e5       	ldi	r24, 0x5D	; 93
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     44a:	08 95       	ret
	}
	else if (distance<=490 && distance>480)
     44c:	9c 01       	movw	r18, r24
     44e:	21 5e       	subi	r18, 0xE1	; 225
     450:	31 40       	sbci	r19, 0x01	; 1
     452:	2a 30       	cpi	r18, 0x0A	; 10
     454:	31 05       	cpc	r19, r1
     456:	80 f4       	brcc	.+32     	; 0x478 <LoadBar+0x72>
	{
		lcd_gotoxy(20,0);
     458:	60 e0       	ldi	r22, 0x00	; 0
     45a:	84 e1       	ldi	r24, 0x14	; 20
     45c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     460:	82 e0       	ldi	r24, 0x02	; 2
     462:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     466:	60 e0       	ldi	r22, 0x00	; 0
     468:	85 e1       	ldi	r24, 0x15	; 21
     46a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     46e:	8d e5       	ldi	r24, 0x5D	; 93
     470:	91 e0       	ldi	r25, 0x01	; 1
     472:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     476:	08 95       	ret
	}
	else if (distance<=480 && distance>470)
     478:	9c 01       	movw	r18, r24
     47a:	27 5d       	subi	r18, 0xD7	; 215
     47c:	31 40       	sbci	r19, 0x01	; 1
     47e:	2a 30       	cpi	r18, 0x0A	; 10
     480:	31 05       	cpc	r19, r1
     482:	80 f4       	brcc	.+32     	; 0x4a4 <LoadBar+0x9e>
	{
		lcd_gotoxy(20,0);
     484:	60 e0       	ldi	r22, 0x00	; 0
     486:	84 e1       	ldi	r24, 0x14	; 20
     488:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     48c:	83 e0       	ldi	r24, 0x03	; 3
     48e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     492:	60 e0       	ldi	r22, 0x00	; 0
     494:	85 e1       	ldi	r24, 0x15	; 21
     496:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     49a:	8d e5       	ldi	r24, 0x5D	; 93
     49c:	91 e0       	ldi	r25, 0x01	; 1
     49e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     4a2:	08 95       	ret
	}
	else if (distance<=470 && distance>460)
     4a4:	9c 01       	movw	r18, r24
     4a6:	2d 5c       	subi	r18, 0xCD	; 205
     4a8:	31 40       	sbci	r19, 0x01	; 1
     4aa:	2a 30       	cpi	r18, 0x0A	; 10
     4ac:	31 05       	cpc	r19, r1
     4ae:	80 f4       	brcc	.+32     	; 0x4d0 <LoadBar+0xca>
	{
		lcd_gotoxy(20,0);
     4b0:	60 e0       	ldi	r22, 0x00	; 0
     4b2:	84 e1       	ldi	r24, 0x14	; 20
     4b4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     4b8:	84 e0       	ldi	r24, 0x04	; 4
     4ba:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     4be:	60 e0       	ldi	r22, 0x00	; 0
     4c0:	85 e1       	ldi	r24, 0x15	; 21
     4c2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     4c6:	8d e5       	ldi	r24, 0x5D	; 93
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     4ce:	08 95       	ret
	}
	else if (distance<=460 && distance>450)
     4d0:	9c 01       	movw	r18, r24
     4d2:	23 5c       	subi	r18, 0xC3	; 195
     4d4:	31 40       	sbci	r19, 0x01	; 1
     4d6:	2a 30       	cpi	r18, 0x0A	; 10
     4d8:	31 05       	cpc	r19, r1
     4da:	80 f4       	brcc	.+32     	; 0x4fc <LoadBar+0xf6>
	{
		lcd_gotoxy(20,0);
     4dc:	60 e0       	ldi	r22, 0x00	; 0
     4de:	84 e1       	ldi	r24, 0x14	; 20
     4e0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     4e4:	85 e0       	ldi	r24, 0x05	; 5
     4e6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     4ea:	60 e0       	ldi	r22, 0x00	; 0
     4ec:	85 e1       	ldi	r24, 0x15	; 21
     4ee:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     4f2:	8d e5       	ldi	r24, 0x5D	; 93
     4f4:	91 e0       	ldi	r25, 0x01	; 1
     4f6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     4fa:	08 95       	ret
		lcd_gotoxy(21,0);
		lcd_putc(1);
		lcd_gotoxy(22,0);
		lcd_puts("                   ");
	}
	else if (distance<=450 && distance>440)
     4fc:	9c 01       	movw	r18, r24
     4fe:	29 5b       	subi	r18, 0xB9	; 185
     500:	31 40       	sbci	r19, 0x01	; 1
     502:	2a 30       	cpi	r18, 0x0A	; 10
     504:	31 05       	cpc	r19, r1
     506:	b8 f4       	brcc	.+46     	; 0x536 <LoadBar+0x130>
	{
		lcd_gotoxy(20,0);
     508:	60 e0       	ldi	r22, 0x00	; 0
     50a:	84 e1       	ldi	r24, 0x14	; 20
     50c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     510:	85 e0       	ldi	r24, 0x05	; 5
     512:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     516:	60 e0       	ldi	r22, 0x00	; 0
     518:	85 e1       	ldi	r24, 0x15	; 21
     51a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     51e:	82 e0       	ldi	r24, 0x02	; 2
     520:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     524:	60 e0       	ldi	r22, 0x00	; 0
     526:	86 e1       	ldi	r24, 0x16	; 22
     528:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                   ");
     52c:	8e e5       	ldi	r24, 0x5E	; 94
     52e:	91 e0       	ldi	r25, 0x01	; 1
     530:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     534:	08 95       	ret
	}
	else if (distance<=440 && distance>430)
     536:	9c 01       	movw	r18, r24
     538:	2f 5a       	subi	r18, 0xAF	; 175
     53a:	31 40       	sbci	r19, 0x01	; 1
     53c:	2a 30       	cpi	r18, 0x0A	; 10
     53e:	31 05       	cpc	r19, r1
     540:	b8 f4       	brcc	.+46     	; 0x570 <LoadBar+0x16a>
	{
		lcd_gotoxy(20,0);
     542:	60 e0       	ldi	r22, 0x00	; 0
     544:	84 e1       	ldi	r24, 0x14	; 20
     546:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     54a:	85 e0       	ldi	r24, 0x05	; 5
     54c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     550:	60 e0       	ldi	r22, 0x00	; 0
     552:	85 e1       	ldi	r24, 0x15	; 21
     554:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     558:	83 e0       	ldi	r24, 0x03	; 3
     55a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	86 e1       	ldi	r24, 0x16	; 22
     562:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                   ");
     566:	8e e5       	ldi	r24, 0x5E	; 94
     568:	91 e0       	ldi	r25, 0x01	; 1
     56a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     56e:	08 95       	ret
	}
	else if (distance<=430 && distance>420)
     570:	9c 01       	movw	r18, r24
     572:	25 5a       	subi	r18, 0xA5	; 165
     574:	31 40       	sbci	r19, 0x01	; 1
     576:	2a 30       	cpi	r18, 0x0A	; 10
     578:	31 05       	cpc	r19, r1
     57a:	b8 f4       	brcc	.+46     	; 0x5aa <LoadBar+0x1a4>
	{
		lcd_gotoxy(20,0);
     57c:	60 e0       	ldi	r22, 0x00	; 0
     57e:	84 e1       	ldi	r24, 0x14	; 20
     580:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     584:	85 e0       	ldi	r24, 0x05	; 5
     586:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	85 e1       	ldi	r24, 0x15	; 21
     58e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     592:	84 e0       	ldi	r24, 0x04	; 4
     594:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	86 e1       	ldi	r24, 0x16	; 22
     59c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                   ");
     5a0:	8e e5       	ldi	r24, 0x5E	; 94
     5a2:	91 e0       	ldi	r25, 0x01	; 1
     5a4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     5a8:	08 95       	ret
	}
	else if (distance<=420 && distance>410)
     5aa:	9c 01       	movw	r18, r24
     5ac:	2b 59       	subi	r18, 0x9B	; 155
     5ae:	31 40       	sbci	r19, 0x01	; 1
     5b0:	2a 30       	cpi	r18, 0x0A	; 10
     5b2:	31 05       	cpc	r19, r1
     5b4:	b8 f4       	brcc	.+46     	; 0x5e4 <LoadBar+0x1de>
	{
		lcd_gotoxy(20,0);
     5b6:	60 e0       	ldi	r22, 0x00	; 0
     5b8:	84 e1       	ldi	r24, 0x14	; 20
     5ba:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     5be:	85 e0       	ldi	r24, 0x05	; 5
     5c0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     5c4:	60 e0       	ldi	r22, 0x00	; 0
     5c6:	85 e1       	ldi	r24, 0x15	; 21
     5c8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     5cc:	85 e0       	ldi	r24, 0x05	; 5
     5ce:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     5d2:	60 e0       	ldi	r22, 0x00	; 0
     5d4:	86 e1       	ldi	r24, 0x16	; 22
     5d6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                   ");
     5da:	8e e5       	ldi	r24, 0x5E	; 94
     5dc:	91 e0       	ldi	r25, 0x01	; 1
     5de:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     5e2:	08 95       	ret
	}
	else if (distance<=410 && distance>400)
     5e4:	9c 01       	movw	r18, r24
     5e6:	21 59       	subi	r18, 0x91	; 145
     5e8:	31 40       	sbci	r19, 0x01	; 1
     5ea:	2a 30       	cpi	r18, 0x0A	; 10
     5ec:	31 05       	cpc	r19, r1
     5ee:	f0 f4       	brcc	.+60     	; 0x62c <LoadBar+0x226>
	{
		lcd_gotoxy(20,0);
     5f0:	60 e0       	ldi	r22, 0x00	; 0
     5f2:	84 e1       	ldi	r24, 0x14	; 20
     5f4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     5f8:	85 e0       	ldi	r24, 0x05	; 5
     5fa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     5fe:	60 e0       	ldi	r22, 0x00	; 0
     600:	85 e1       	ldi	r24, 0x15	; 21
     602:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     606:	85 e0       	ldi	r24, 0x05	; 5
     608:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     60c:	60 e0       	ldi	r22, 0x00	; 0
     60e:	86 e1       	ldi	r24, 0x16	; 22
     610:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     614:	81 e0       	ldi	r24, 0x01	; 1
     616:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     61a:	60 e0       	ldi	r22, 0x00	; 0
     61c:	87 e1       	ldi	r24, 0x17	; 23
     61e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     622:	8f e5       	ldi	r24, 0x5F	; 95
     624:	91 e0       	ldi	r25, 0x01	; 1
     626:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     62a:	08 95       	ret
	}
	else if (distance<=400 && distance>390)
     62c:	9c 01       	movw	r18, r24
     62e:	27 58       	subi	r18, 0x87	; 135
     630:	31 40       	sbci	r19, 0x01	; 1
     632:	2a 30       	cpi	r18, 0x0A	; 10
     634:	31 05       	cpc	r19, r1
     636:	f0 f4       	brcc	.+60     	; 0x674 <LoadBar+0x26e>
	{
		lcd_gotoxy(20,0);
     638:	60 e0       	ldi	r22, 0x00	; 0
     63a:	84 e1       	ldi	r24, 0x14	; 20
     63c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     640:	85 e0       	ldi	r24, 0x05	; 5
     642:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     646:	60 e0       	ldi	r22, 0x00	; 0
     648:	85 e1       	ldi	r24, 0x15	; 21
     64a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     64e:	85 e0       	ldi	r24, 0x05	; 5
     650:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	86 e1       	ldi	r24, 0x16	; 22
     658:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     65c:	82 e0       	ldi	r24, 0x02	; 2
     65e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	87 e1       	ldi	r24, 0x17	; 23
     666:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     66a:	8f e5       	ldi	r24, 0x5F	; 95
     66c:	91 e0       	ldi	r25, 0x01	; 1
     66e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     672:	08 95       	ret
	}
	else if (distance<=390 && distance>=380)
     674:	9c 01       	movw	r18, r24
     676:	2c 57       	subi	r18, 0x7C	; 124
     678:	31 40       	sbci	r19, 0x01	; 1
     67a:	2b 30       	cpi	r18, 0x0B	; 11
     67c:	31 05       	cpc	r19, r1
     67e:	f0 f4       	brcc	.+60     	; 0x6bc <LoadBar+0x2b6>
	{
		lcd_gotoxy(20,0);
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	84 e1       	ldi	r24, 0x14	; 20
     684:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     688:	85 e0       	ldi	r24, 0x05	; 5
     68a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     68e:	60 e0       	ldi	r22, 0x00	; 0
     690:	85 e1       	ldi	r24, 0x15	; 21
     692:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     696:	85 e0       	ldi	r24, 0x05	; 5
     698:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     69c:	60 e0       	ldi	r22, 0x00	; 0
     69e:	86 e1       	ldi	r24, 0x16	; 22
     6a0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     6a4:	83 e0       	ldi	r24, 0x03	; 3
     6a6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	87 e1       	ldi	r24, 0x17	; 23
     6ae:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     6b2:	8f e5       	ldi	r24, 0x5F	; 95
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     6ba:	08 95       	ret
	}
	else if (distance<=380 && distance>370)
     6bc:	9c 01       	movw	r18, r24
     6be:	23 57       	subi	r18, 0x73	; 115
     6c0:	31 40       	sbci	r19, 0x01	; 1
     6c2:	2a 30       	cpi	r18, 0x0A	; 10
     6c4:	31 05       	cpc	r19, r1
     6c6:	f0 f4       	brcc	.+60     	; 0x704 <LoadBar+0x2fe>
	{
		lcd_gotoxy(20,0);
     6c8:	60 e0       	ldi	r22, 0x00	; 0
     6ca:	84 e1       	ldi	r24, 0x14	; 20
     6cc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     6d0:	85 e0       	ldi	r24, 0x05	; 5
     6d2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     6d6:	60 e0       	ldi	r22, 0x00	; 0
     6d8:	85 e1       	ldi	r24, 0x15	; 21
     6da:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     6de:	85 e0       	ldi	r24, 0x05	; 5
     6e0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     6e4:	60 e0       	ldi	r22, 0x00	; 0
     6e6:	86 e1       	ldi	r24, 0x16	; 22
     6e8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     6ec:	84 e0       	ldi	r24, 0x04	; 4
     6ee:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	87 e1       	ldi	r24, 0x17	; 23
     6f6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     6fa:	8f e5       	ldi	r24, 0x5F	; 95
     6fc:	91 e0       	ldi	r25, 0x01	; 1
     6fe:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     702:	08 95       	ret
	}
	else if (distance<=370 && distance>360)
     704:	9c 01       	movw	r18, r24
     706:	29 56       	subi	r18, 0x69	; 105
     708:	31 40       	sbci	r19, 0x01	; 1
     70a:	2a 30       	cpi	r18, 0x0A	; 10
     70c:	31 05       	cpc	r19, r1
     70e:	f0 f4       	brcc	.+60     	; 0x74c <LoadBar+0x346>
	{
		lcd_gotoxy(20,0);
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	84 e1       	ldi	r24, 0x14	; 20
     714:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     718:	85 e0       	ldi	r24, 0x05	; 5
     71a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	85 e1       	ldi	r24, 0x15	; 21
     722:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     726:	85 e0       	ldi	r24, 0x05	; 5
     728:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     72c:	60 e0       	ldi	r22, 0x00	; 0
     72e:	86 e1       	ldi	r24, 0x16	; 22
     730:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     734:	85 e0       	ldi	r24, 0x05	; 5
     736:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     73a:	60 e0       	ldi	r22, 0x00	; 0
     73c:	87 e1       	ldi	r24, 0x17	; 23
     73e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     742:	8f e5       	ldi	r24, 0x5F	; 95
     744:	91 e0       	ldi	r25, 0x01	; 1
     746:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     74a:	08 95       	ret
	}
	else if (distance<=360 && distance>350)
     74c:	9c 01       	movw	r18, r24
     74e:	2f 55       	subi	r18, 0x5F	; 95
     750:	31 40       	sbci	r19, 0x01	; 1
     752:	2a 30       	cpi	r18, 0x0A	; 10
     754:	31 05       	cpc	r19, r1
     756:	28 f5       	brcc	.+74     	; 0x7a2 <LoadBar+0x39c>
	{
		lcd_gotoxy(20,0);
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	84 e1       	ldi	r24, 0x14	; 20
     75c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     760:	85 e0       	ldi	r24, 0x05	; 5
     762:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     766:	60 e0       	ldi	r22, 0x00	; 0
     768:	85 e1       	ldi	r24, 0x15	; 21
     76a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     76e:	85 e0       	ldi	r24, 0x05	; 5
     770:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     774:	60 e0       	ldi	r22, 0x00	; 0
     776:	86 e1       	ldi	r24, 0x16	; 22
     778:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     77c:	85 e0       	ldi	r24, 0x05	; 5
     77e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     782:	60 e0       	ldi	r22, 0x00	; 0
     784:	87 e1       	ldi	r24, 0x17	; 23
     786:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     790:	60 e0       	ldi	r22, 0x00	; 0
     792:	88 e1       	ldi	r24, 0x18	; 24
     794:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     798:	80 e6       	ldi	r24, 0x60	; 96
     79a:	91 e0       	ldi	r25, 0x01	; 1
     79c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     7a0:	08 95       	ret
	}
	else if (distance<=350 && distance>340)
     7a2:	9c 01       	movw	r18, r24
     7a4:	25 55       	subi	r18, 0x55	; 85
     7a6:	31 40       	sbci	r19, 0x01	; 1
     7a8:	2a 30       	cpi	r18, 0x0A	; 10
     7aa:	31 05       	cpc	r19, r1
     7ac:	28 f5       	brcc	.+74     	; 0x7f8 <LoadBar+0x3f2>
	{
		lcd_gotoxy(20,0);
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	84 e1       	ldi	r24, 0x14	; 20
     7b2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     7b6:	85 e0       	ldi	r24, 0x05	; 5
     7b8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     7bc:	60 e0       	ldi	r22, 0x00	; 0
     7be:	85 e1       	ldi	r24, 0x15	; 21
     7c0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     7c4:	85 e0       	ldi	r24, 0x05	; 5
     7c6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	86 e1       	ldi	r24, 0x16	; 22
     7ce:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     7d2:	85 e0       	ldi	r24, 0x05	; 5
     7d4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     7d8:	60 e0       	ldi	r22, 0x00	; 0
     7da:	87 e1       	ldi	r24, 0x17	; 23
     7dc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     7e0:	82 e0       	ldi	r24, 0x02	; 2
     7e2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     7e6:	60 e0       	ldi	r22, 0x00	; 0
     7e8:	88 e1       	ldi	r24, 0x18	; 24
     7ea:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     7ee:	80 e6       	ldi	r24, 0x60	; 96
     7f0:	91 e0       	ldi	r25, 0x01	; 1
     7f2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     7f6:	08 95       	ret
	}
	else if (distance<=340 && distance>330)
     7f8:	9c 01       	movw	r18, r24
     7fa:	2b 54       	subi	r18, 0x4B	; 75
     7fc:	31 40       	sbci	r19, 0x01	; 1
     7fe:	2a 30       	cpi	r18, 0x0A	; 10
     800:	31 05       	cpc	r19, r1
     802:	28 f5       	brcc	.+74     	; 0x84e <LoadBar+0x448>
	{
		lcd_gotoxy(20,0);
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	84 e1       	ldi	r24, 0x14	; 20
     808:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     80c:	85 e0       	ldi	r24, 0x05	; 5
     80e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     812:	60 e0       	ldi	r22, 0x00	; 0
     814:	85 e1       	ldi	r24, 0x15	; 21
     816:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     81a:	85 e0       	ldi	r24, 0x05	; 5
     81c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     820:	60 e0       	ldi	r22, 0x00	; 0
     822:	86 e1       	ldi	r24, 0x16	; 22
     824:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     828:	85 e0       	ldi	r24, 0x05	; 5
     82a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     82e:	60 e0       	ldi	r22, 0x00	; 0
     830:	87 e1       	ldi	r24, 0x17	; 23
     832:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     836:	83 e0       	ldi	r24, 0x03	; 3
     838:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     83c:	60 e0       	ldi	r22, 0x00	; 0
     83e:	88 e1       	ldi	r24, 0x18	; 24
     840:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     844:	80 e6       	ldi	r24, 0x60	; 96
     846:	91 e0       	ldi	r25, 0x01	; 1
     848:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     84c:	08 95       	ret
	}
	else if (distance<=330 && distance>320)
     84e:	9c 01       	movw	r18, r24
     850:	21 54       	subi	r18, 0x41	; 65
     852:	31 40       	sbci	r19, 0x01	; 1
     854:	2a 30       	cpi	r18, 0x0A	; 10
     856:	31 05       	cpc	r19, r1
     858:	28 f5       	brcc	.+74     	; 0x8a4 <LoadBar+0x49e>
	{
		lcd_gotoxy(20,0);
     85a:	60 e0       	ldi	r22, 0x00	; 0
     85c:	84 e1       	ldi	r24, 0x14	; 20
     85e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     862:	85 e0       	ldi	r24, 0x05	; 5
     864:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     868:	60 e0       	ldi	r22, 0x00	; 0
     86a:	85 e1       	ldi	r24, 0x15	; 21
     86c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     870:	85 e0       	ldi	r24, 0x05	; 5
     872:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     876:	60 e0       	ldi	r22, 0x00	; 0
     878:	86 e1       	ldi	r24, 0x16	; 22
     87a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     87e:	85 e0       	ldi	r24, 0x05	; 5
     880:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	87 e1       	ldi	r24, 0x17	; 23
     888:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     88c:	84 e0       	ldi	r24, 0x04	; 4
     88e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     892:	60 e0       	ldi	r22, 0x00	; 0
     894:	88 e1       	ldi	r24, 0x18	; 24
     896:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     89a:	80 e6       	ldi	r24, 0x60	; 96
     89c:	91 e0       	ldi	r25, 0x01	; 1
     89e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     8a2:	08 95       	ret
	}
	else if (distance<=320 && distance>310)
     8a4:	9c 01       	movw	r18, r24
     8a6:	27 53       	subi	r18, 0x37	; 55
     8a8:	31 40       	sbci	r19, 0x01	; 1
     8aa:	2a 30       	cpi	r18, 0x0A	; 10
     8ac:	31 05       	cpc	r19, r1
     8ae:	28 f5       	brcc	.+74     	; 0x8fa <LoadBar+0x4f4>
	{
		lcd_gotoxy(20,0);
     8b0:	60 e0       	ldi	r22, 0x00	; 0
     8b2:	84 e1       	ldi	r24, 0x14	; 20
     8b4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     8b8:	85 e0       	ldi	r24, 0x05	; 5
     8ba:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	85 e1       	ldi	r24, 0x15	; 21
     8c2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     8c6:	85 e0       	ldi	r24, 0x05	; 5
     8c8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     8cc:	60 e0       	ldi	r22, 0x00	; 0
     8ce:	86 e1       	ldi	r24, 0x16	; 22
     8d0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     8d4:	85 e0       	ldi	r24, 0x05	; 5
     8d6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	87 e1       	ldi	r24, 0x17	; 23
     8de:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     8e2:	85 e0       	ldi	r24, 0x05	; 5
     8e4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     8e8:	60 e0       	ldi	r22, 0x00	; 0
     8ea:	88 e1       	ldi	r24, 0x18	; 24
     8ec:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     8f0:	80 e6       	ldi	r24, 0x60	; 96
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     8f8:	08 95       	ret
	}
	else if (distance<=310 && distance>300)
     8fa:	9c 01       	movw	r18, r24
     8fc:	2d 52       	subi	r18, 0x2D	; 45
     8fe:	31 40       	sbci	r19, 0x01	; 1
     900:	2a 30       	cpi	r18, 0x0A	; 10
     902:	31 05       	cpc	r19, r1
     904:	60 f5       	brcc	.+88     	; 0x95e <__stack+0x5f>
	{
		lcd_gotoxy(20,0);
     906:	60 e0       	ldi	r22, 0x00	; 0
     908:	84 e1       	ldi	r24, 0x14	; 20
     90a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     90e:	85 e0       	ldi	r24, 0x05	; 5
     910:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     914:	60 e0       	ldi	r22, 0x00	; 0
     916:	85 e1       	ldi	r24, 0x15	; 21
     918:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     91c:	85 e0       	ldi	r24, 0x05	; 5
     91e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     922:	60 e0       	ldi	r22, 0x00	; 0
     924:	86 e1       	ldi	r24, 0x16	; 22
     926:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     92a:	85 e0       	ldi	r24, 0x05	; 5
     92c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     930:	60 e0       	ldi	r22, 0x00	; 0
     932:	87 e1       	ldi	r24, 0x17	; 23
     934:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     938:	85 e0       	ldi	r24, 0x05	; 5
     93a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	88 e1       	ldi	r24, 0x18	; 24
     942:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     946:	81 e0       	ldi	r24, 0x01	; 1
     948:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     94c:	60 e0       	ldi	r22, 0x00	; 0
     94e:	89 e1       	ldi	r24, 0x19	; 25
     950:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     954:	81 e6       	ldi	r24, 0x61	; 97
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     95c:	08 95       	ret
	}
	else if (distance<=300 && distance>290)
     95e:	9c 01       	movw	r18, r24
     960:	23 52       	subi	r18, 0x23	; 35
     962:	31 40       	sbci	r19, 0x01	; 1
     964:	2a 30       	cpi	r18, 0x0A	; 10
     966:	31 05       	cpc	r19, r1
     968:	60 f5       	brcc	.+88     	; 0x9c2 <__stack+0xc3>
	{
		lcd_gotoxy(20,0);
     96a:	60 e0       	ldi	r22, 0x00	; 0
     96c:	84 e1       	ldi	r24, 0x14	; 20
     96e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     972:	85 e0       	ldi	r24, 0x05	; 5
     974:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     978:	60 e0       	ldi	r22, 0x00	; 0
     97a:	85 e1       	ldi	r24, 0x15	; 21
     97c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     980:	85 e0       	ldi	r24, 0x05	; 5
     982:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     986:	60 e0       	ldi	r22, 0x00	; 0
     988:	86 e1       	ldi	r24, 0x16	; 22
     98a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     98e:	85 e0       	ldi	r24, 0x05	; 5
     990:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     994:	60 e0       	ldi	r22, 0x00	; 0
     996:	87 e1       	ldi	r24, 0x17	; 23
     998:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     99c:	85 e0       	ldi	r24, 0x05	; 5
     99e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	88 e1       	ldi	r24, 0x18	; 24
     9a6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     9aa:	82 e0       	ldi	r24, 0x02	; 2
     9ac:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     9b0:	60 e0       	ldi	r22, 0x00	; 0
     9b2:	89 e1       	ldi	r24, 0x19	; 25
     9b4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     9b8:	81 e6       	ldi	r24, 0x61	; 97
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     9c0:	08 95       	ret
	}
	else if (distance<=290 && distance>280)
     9c2:	9c 01       	movw	r18, r24
     9c4:	29 51       	subi	r18, 0x19	; 25
     9c6:	31 40       	sbci	r19, 0x01	; 1
     9c8:	2a 30       	cpi	r18, 0x0A	; 10
     9ca:	31 05       	cpc	r19, r1
     9cc:	60 f5       	brcc	.+88     	; 0xa26 <__stack+0x127>
	{
		lcd_gotoxy(20,0);
     9ce:	60 e0       	ldi	r22, 0x00	; 0
     9d0:	84 e1       	ldi	r24, 0x14	; 20
     9d2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     9d6:	85 e0       	ldi	r24, 0x05	; 5
     9d8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     9dc:	60 e0       	ldi	r22, 0x00	; 0
     9de:	85 e1       	ldi	r24, 0x15	; 21
     9e0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     9e4:	85 e0       	ldi	r24, 0x05	; 5
     9e6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     9ea:	60 e0       	ldi	r22, 0x00	; 0
     9ec:	86 e1       	ldi	r24, 0x16	; 22
     9ee:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     9f2:	85 e0       	ldi	r24, 0x05	; 5
     9f4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	87 e1       	ldi	r24, 0x17	; 23
     9fc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a00:	85 e0       	ldi	r24, 0x05	; 5
     a02:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     a06:	60 e0       	ldi	r22, 0x00	; 0
     a08:	88 e1       	ldi	r24, 0x18	; 24
     a0a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     a0e:	83 e0       	ldi	r24, 0x03	; 3
     a10:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     a14:	60 e0       	ldi	r22, 0x00	; 0
     a16:	89 e1       	ldi	r24, 0x19	; 25
     a18:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     a1c:	81 e6       	ldi	r24, 0x61	; 97
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     a24:	08 95       	ret
	}
	else if (distance<=280 && distance>270)
     a26:	9c 01       	movw	r18, r24
     a28:	2f 50       	subi	r18, 0x0F	; 15
     a2a:	31 40       	sbci	r19, 0x01	; 1
     a2c:	2a 30       	cpi	r18, 0x0A	; 10
     a2e:	31 05       	cpc	r19, r1
     a30:	60 f5       	brcc	.+88     	; 0xa8a <__stack+0x18b>
	{
		lcd_gotoxy(20,0);
     a32:	60 e0       	ldi	r22, 0x00	; 0
     a34:	84 e1       	ldi	r24, 0x14	; 20
     a36:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a3a:	85 e0       	ldi	r24, 0x05	; 5
     a3c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	85 e1       	ldi	r24, 0x15	; 21
     a44:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a48:	85 e0       	ldi	r24, 0x05	; 5
     a4a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     a4e:	60 e0       	ldi	r22, 0x00	; 0
     a50:	86 e1       	ldi	r24, 0x16	; 22
     a52:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a56:	85 e0       	ldi	r24, 0x05	; 5
     a58:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     a5c:	60 e0       	ldi	r22, 0x00	; 0
     a5e:	87 e1       	ldi	r24, 0x17	; 23
     a60:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a64:	85 e0       	ldi	r24, 0x05	; 5
     a66:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	88 e1       	ldi	r24, 0x18	; 24
     a6e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     a72:	84 e0       	ldi	r24, 0x04	; 4
     a74:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     a78:	60 e0       	ldi	r22, 0x00	; 0
     a7a:	89 e1       	ldi	r24, 0x19	; 25
     a7c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     a80:	81 e6       	ldi	r24, 0x61	; 97
     a82:	91 e0       	ldi	r25, 0x01	; 1
     a84:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     a88:	08 95       	ret
	}
	else if (distance<=270 && distance>260)
     a8a:	9c 01       	movw	r18, r24
     a8c:	25 50       	subi	r18, 0x05	; 5
     a8e:	31 40       	sbci	r19, 0x01	; 1
     a90:	2a 30       	cpi	r18, 0x0A	; 10
     a92:	31 05       	cpc	r19, r1
     a94:	60 f5       	brcc	.+88     	; 0xaee <__stack+0x1ef>
	{
		lcd_gotoxy(20,0);
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	84 e1       	ldi	r24, 0x14	; 20
     a9a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a9e:	85 e0       	ldi	r24, 0x05	; 5
     aa0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     aa4:	60 e0       	ldi	r22, 0x00	; 0
     aa6:	85 e1       	ldi	r24, 0x15	; 21
     aa8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     aac:	85 e0       	ldi	r24, 0x05	; 5
     aae:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	86 e1       	ldi	r24, 0x16	; 22
     ab6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     aba:	85 e0       	ldi	r24, 0x05	; 5
     abc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     ac0:	60 e0       	ldi	r22, 0x00	; 0
     ac2:	87 e1       	ldi	r24, 0x17	; 23
     ac4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ac8:	85 e0       	ldi	r24, 0x05	; 5
     aca:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     ace:	60 e0       	ldi	r22, 0x00	; 0
     ad0:	88 e1       	ldi	r24, 0x18	; 24
     ad2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ad6:	85 e0       	ldi	r24, 0x05	; 5
     ad8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     adc:	60 e0       	ldi	r22, 0x00	; 0
     ade:	89 e1       	ldi	r24, 0x19	; 25
     ae0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     ae4:	81 e6       	ldi	r24, 0x61	; 97
     ae6:	91 e0       	ldi	r25, 0x01	; 1
     ae8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     aec:	08 95       	ret
	}
	else if (distance<=260 && distance>250)
     aee:	9c 01       	movw	r18, r24
     af0:	2b 5f       	subi	r18, 0xFB	; 251
     af2:	31 09       	sbc	r19, r1
     af4:	2a 30       	cpi	r18, 0x0A	; 10
     af6:	31 05       	cpc	r19, r1
     af8:	98 f5       	brcc	.+102    	; 0xb60 <__stack+0x261>
	{
		lcd_gotoxy(20,0);
     afa:	60 e0       	ldi	r22, 0x00	; 0
     afc:	84 e1       	ldi	r24, 0x14	; 20
     afe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b02:	85 e0       	ldi	r24, 0x05	; 5
     b04:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     b08:	60 e0       	ldi	r22, 0x00	; 0
     b0a:	85 e1       	ldi	r24, 0x15	; 21
     b0c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b10:	85 e0       	ldi	r24, 0x05	; 5
     b12:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     b16:	60 e0       	ldi	r22, 0x00	; 0
     b18:	86 e1       	ldi	r24, 0x16	; 22
     b1a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b1e:	85 e0       	ldi	r24, 0x05	; 5
     b20:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     b24:	60 e0       	ldi	r22, 0x00	; 0
     b26:	87 e1       	ldi	r24, 0x17	; 23
     b28:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b2c:	85 e0       	ldi	r24, 0x05	; 5
     b2e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	88 e1       	ldi	r24, 0x18	; 24
     b36:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b3a:	85 e0       	ldi	r24, 0x05	; 5
     b3c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     b40:	60 e0       	ldi	r22, 0x00	; 0
     b42:	89 e1       	ldi	r24, 0x19	; 25
     b44:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	8a e1       	ldi	r24, 0x1A	; 26
     b52:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     b56:	82 e6       	ldi	r24, 0x62	; 98
     b58:	91 e0       	ldi	r25, 0x01	; 1
     b5a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     b5e:	08 95       	ret
	}
	else if (distance<=250 && distance>240)
     b60:	9c 01       	movw	r18, r24
     b62:	21 5f       	subi	r18, 0xF1	; 241
     b64:	31 09       	sbc	r19, r1
     b66:	2a 30       	cpi	r18, 0x0A	; 10
     b68:	31 05       	cpc	r19, r1
     b6a:	98 f5       	brcc	.+102    	; 0xbd2 <__stack+0x2d3>
	{
		lcd_gotoxy(20,0);
     b6c:	60 e0       	ldi	r22, 0x00	; 0
     b6e:	84 e1       	ldi	r24, 0x14	; 20
     b70:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b74:	85 e0       	ldi	r24, 0x05	; 5
     b76:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     b7a:	60 e0       	ldi	r22, 0x00	; 0
     b7c:	85 e1       	ldi	r24, 0x15	; 21
     b7e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b82:	85 e0       	ldi	r24, 0x05	; 5
     b84:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	86 e1       	ldi	r24, 0x16	; 22
     b8c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b90:	85 e0       	ldi	r24, 0x05	; 5
     b92:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     b96:	60 e0       	ldi	r22, 0x00	; 0
     b98:	87 e1       	ldi	r24, 0x17	; 23
     b9a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b9e:	85 e0       	ldi	r24, 0x05	; 5
     ba0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     ba4:	60 e0       	ldi	r22, 0x00	; 0
     ba6:	88 e1       	ldi	r24, 0x18	; 24
     ba8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     bac:	85 e0       	ldi	r24, 0x05	; 5
     bae:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     bb2:	60 e0       	ldi	r22, 0x00	; 0
     bb4:	89 e1       	ldi	r24, 0x19	; 25
     bb6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     bba:	82 e0       	ldi	r24, 0x02	; 2
     bbc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     bc0:	60 e0       	ldi	r22, 0x00	; 0
     bc2:	8a e1       	ldi	r24, 0x1A	; 26
     bc4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     bc8:	82 e6       	ldi	r24, 0x62	; 98
     bca:	91 e0       	ldi	r25, 0x01	; 1
     bcc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     bd0:	08 95       	ret
	}
	else if (distance<=240 && distance>230)
     bd2:	9c 01       	movw	r18, r24
     bd4:	27 5e       	subi	r18, 0xE7	; 231
     bd6:	31 09       	sbc	r19, r1
     bd8:	2a 30       	cpi	r18, 0x0A	; 10
     bda:	31 05       	cpc	r19, r1
     bdc:	98 f5       	brcc	.+102    	; 0xc44 <__stack+0x345>
	{
		lcd_gotoxy(20,0);
     bde:	60 e0       	ldi	r22, 0x00	; 0
     be0:	84 e1       	ldi	r24, 0x14	; 20
     be2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     be6:	85 e0       	ldi	r24, 0x05	; 5
     be8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     bec:	60 e0       	ldi	r22, 0x00	; 0
     bee:	85 e1       	ldi	r24, 0x15	; 21
     bf0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     bf4:	85 e0       	ldi	r24, 0x05	; 5
     bf6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     bfa:	60 e0       	ldi	r22, 0x00	; 0
     bfc:	86 e1       	ldi	r24, 0x16	; 22
     bfe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c02:	85 e0       	ldi	r24, 0x05	; 5
     c04:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     c08:	60 e0       	ldi	r22, 0x00	; 0
     c0a:	87 e1       	ldi	r24, 0x17	; 23
     c0c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c10:	85 e0       	ldi	r24, 0x05	; 5
     c12:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     c16:	60 e0       	ldi	r22, 0x00	; 0
     c18:	88 e1       	ldi	r24, 0x18	; 24
     c1a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c1e:	85 e0       	ldi	r24, 0x05	; 5
     c20:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     c24:	60 e0       	ldi	r22, 0x00	; 0
     c26:	89 e1       	ldi	r24, 0x19	; 25
     c28:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     c2c:	83 e0       	ldi	r24, 0x03	; 3
     c2e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	8a e1       	ldi	r24, 0x1A	; 26
     c36:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     c3a:	82 e6       	ldi	r24, 0x62	; 98
     c3c:	91 e0       	ldi	r25, 0x01	; 1
     c3e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     c42:	08 95       	ret
	}
	else if (distance<=230 && distance>220)
     c44:	9c 01       	movw	r18, r24
     c46:	2d 5d       	subi	r18, 0xDD	; 221
     c48:	31 09       	sbc	r19, r1
     c4a:	2a 30       	cpi	r18, 0x0A	; 10
     c4c:	31 05       	cpc	r19, r1
     c4e:	98 f5       	brcc	.+102    	; 0xcb6 <__stack+0x3b7>
	{
		lcd_gotoxy(20,0);
     c50:	60 e0       	ldi	r22, 0x00	; 0
     c52:	84 e1       	ldi	r24, 0x14	; 20
     c54:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c58:	85 e0       	ldi	r24, 0x05	; 5
     c5a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     c5e:	60 e0       	ldi	r22, 0x00	; 0
     c60:	85 e1       	ldi	r24, 0x15	; 21
     c62:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c66:	85 e0       	ldi	r24, 0x05	; 5
     c68:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     c6c:	60 e0       	ldi	r22, 0x00	; 0
     c6e:	86 e1       	ldi	r24, 0x16	; 22
     c70:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c74:	85 e0       	ldi	r24, 0x05	; 5
     c76:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     c7a:	60 e0       	ldi	r22, 0x00	; 0
     c7c:	87 e1       	ldi	r24, 0x17	; 23
     c7e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c82:	85 e0       	ldi	r24, 0x05	; 5
     c84:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     c88:	60 e0       	ldi	r22, 0x00	; 0
     c8a:	88 e1       	ldi	r24, 0x18	; 24
     c8c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c90:	85 e0       	ldi	r24, 0x05	; 5
     c92:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     c96:	60 e0       	ldi	r22, 0x00	; 0
     c98:	89 e1       	ldi	r24, 0x19	; 25
     c9a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     c9e:	84 e0       	ldi	r24, 0x04	; 4
     ca0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	8a e1       	ldi	r24, 0x1A	; 26
     ca8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     cac:	82 e6       	ldi	r24, 0x62	; 98
     cae:	91 e0       	ldi	r25, 0x01	; 1
     cb0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     cb4:	08 95       	ret
	}
	else if (distance<=220 && distance>210)
     cb6:	9c 01       	movw	r18, r24
     cb8:	23 5d       	subi	r18, 0xD3	; 211
     cba:	31 09       	sbc	r19, r1
     cbc:	2a 30       	cpi	r18, 0x0A	; 10
     cbe:	31 05       	cpc	r19, r1
     cc0:	98 f5       	brcc	.+102    	; 0xd28 <__stack+0x429>
	{
		lcd_gotoxy(20,0);
     cc2:	60 e0       	ldi	r22, 0x00	; 0
     cc4:	84 e1       	ldi	r24, 0x14	; 20
     cc6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     cca:	85 e0       	ldi	r24, 0x05	; 5
     ccc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     cd0:	60 e0       	ldi	r22, 0x00	; 0
     cd2:	85 e1       	ldi	r24, 0x15	; 21
     cd4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     cd8:	85 e0       	ldi	r24, 0x05	; 5
     cda:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     cde:	60 e0       	ldi	r22, 0x00	; 0
     ce0:	86 e1       	ldi	r24, 0x16	; 22
     ce2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ce6:	85 e0       	ldi	r24, 0x05	; 5
     ce8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     cec:	60 e0       	ldi	r22, 0x00	; 0
     cee:	87 e1       	ldi	r24, 0x17	; 23
     cf0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     cf4:	85 e0       	ldi	r24, 0x05	; 5
     cf6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     cfa:	60 e0       	ldi	r22, 0x00	; 0
     cfc:	88 e1       	ldi	r24, 0x18	; 24
     cfe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d02:	85 e0       	ldi	r24, 0x05	; 5
     d04:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     d08:	60 e0       	ldi	r22, 0x00	; 0
     d0a:	89 e1       	ldi	r24, 0x19	; 25
     d0c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d10:	85 e0       	ldi	r24, 0x05	; 5
     d12:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     d16:	60 e0       	ldi	r22, 0x00	; 0
     d18:	8a e1       	ldi	r24, 0x1A	; 26
     d1a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     d1e:	82 e6       	ldi	r24, 0x62	; 98
     d20:	91 e0       	ldi	r25, 0x01	; 1
     d22:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     d26:	08 95       	ret
	}
	else if (distance<=210 && distance>200)
     d28:	9c 01       	movw	r18, r24
     d2a:	29 5c       	subi	r18, 0xC9	; 201
     d2c:	31 09       	sbc	r19, r1
     d2e:	2a 30       	cpi	r18, 0x0A	; 10
     d30:	31 05       	cpc	r19, r1
     d32:	d0 f5       	brcc	.+116    	; 0xda8 <__stack+0x4a9>
	{
		lcd_gotoxy(20,0);
     d34:	60 e0       	ldi	r22, 0x00	; 0
     d36:	84 e1       	ldi	r24, 0x14	; 20
     d38:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d3c:	85 e0       	ldi	r24, 0x05	; 5
     d3e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     d42:	60 e0       	ldi	r22, 0x00	; 0
     d44:	85 e1       	ldi	r24, 0x15	; 21
     d46:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d4a:	85 e0       	ldi	r24, 0x05	; 5
     d4c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     d50:	60 e0       	ldi	r22, 0x00	; 0
     d52:	86 e1       	ldi	r24, 0x16	; 22
     d54:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d58:	85 e0       	ldi	r24, 0x05	; 5
     d5a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     d5e:	60 e0       	ldi	r22, 0x00	; 0
     d60:	87 e1       	ldi	r24, 0x17	; 23
     d62:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d66:	85 e0       	ldi	r24, 0x05	; 5
     d68:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     d6c:	60 e0       	ldi	r22, 0x00	; 0
     d6e:	88 e1       	ldi	r24, 0x18	; 24
     d70:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d74:	85 e0       	ldi	r24, 0x05	; 5
     d76:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     d7a:	60 e0       	ldi	r22, 0x00	; 0
     d7c:	89 e1       	ldi	r24, 0x19	; 25
     d7e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d82:	85 e0       	ldi	r24, 0x05	; 5
     d84:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     d88:	60 e0       	ldi	r22, 0x00	; 0
     d8a:	8a e1       	ldi	r24, 0x1A	; 26
     d8c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     d96:	60 e0       	ldi	r22, 0x00	; 0
     d98:	8b e1       	ldi	r24, 0x1B	; 27
     d9a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     d9e:	83 e6       	ldi	r24, 0x63	; 99
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     da6:	08 95       	ret
	}
	else if (distance<=200 && distance>190)
     da8:	9c 01       	movw	r18, r24
     daa:	2f 5b       	subi	r18, 0xBF	; 191
     dac:	31 09       	sbc	r19, r1
     dae:	2a 30       	cpi	r18, 0x0A	; 10
     db0:	31 05       	cpc	r19, r1
     db2:	d0 f5       	brcc	.+116    	; 0xe28 <__stack+0x529>
	{
		lcd_gotoxy(20,0);
     db4:	60 e0       	ldi	r22, 0x00	; 0
     db6:	84 e1       	ldi	r24, 0x14	; 20
     db8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     dbc:	85 e0       	ldi	r24, 0x05	; 5
     dbe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     dc2:	60 e0       	ldi	r22, 0x00	; 0
     dc4:	85 e1       	ldi	r24, 0x15	; 21
     dc6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     dca:	85 e0       	ldi	r24, 0x05	; 5
     dcc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	86 e1       	ldi	r24, 0x16	; 22
     dd4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     dd8:	85 e0       	ldi	r24, 0x05	; 5
     dda:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     dde:	60 e0       	ldi	r22, 0x00	; 0
     de0:	87 e1       	ldi	r24, 0x17	; 23
     de2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     de6:	85 e0       	ldi	r24, 0x05	; 5
     de8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	88 e1       	ldi	r24, 0x18	; 24
     df0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     df4:	85 e0       	ldi	r24, 0x05	; 5
     df6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     dfa:	60 e0       	ldi	r22, 0x00	; 0
     dfc:	89 e1       	ldi	r24, 0x19	; 25
     dfe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e02:	85 e0       	ldi	r24, 0x05	; 5
     e04:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     e08:	60 e0       	ldi	r22, 0x00	; 0
     e0a:	8a e1       	ldi	r24, 0x1A	; 26
     e0c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     e10:	82 e0       	ldi	r24, 0x02	; 2
     e12:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     e16:	60 e0       	ldi	r22, 0x00	; 0
     e18:	8b e1       	ldi	r24, 0x1B	; 27
     e1a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     e1e:	83 e6       	ldi	r24, 0x63	; 99
     e20:	91 e0       	ldi	r25, 0x01	; 1
     e22:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     e26:	08 95       	ret
	}
	else if (distance<=190 && distance>180)
     e28:	9c 01       	movw	r18, r24
     e2a:	25 5b       	subi	r18, 0xB5	; 181
     e2c:	31 09       	sbc	r19, r1
     e2e:	2a 30       	cpi	r18, 0x0A	; 10
     e30:	31 05       	cpc	r19, r1
     e32:	d0 f5       	brcc	.+116    	; 0xea8 <__stack+0x5a9>
	{
		lcd_gotoxy(20,0);
     e34:	60 e0       	ldi	r22, 0x00	; 0
     e36:	84 e1       	ldi	r24, 0x14	; 20
     e38:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e3c:	85 e0       	ldi	r24, 0x05	; 5
     e3e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     e42:	60 e0       	ldi	r22, 0x00	; 0
     e44:	85 e1       	ldi	r24, 0x15	; 21
     e46:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e4a:	85 e0       	ldi	r24, 0x05	; 5
     e4c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	86 e1       	ldi	r24, 0x16	; 22
     e54:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e58:	85 e0       	ldi	r24, 0x05	; 5
     e5a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     e5e:	60 e0       	ldi	r22, 0x00	; 0
     e60:	87 e1       	ldi	r24, 0x17	; 23
     e62:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e66:	85 e0       	ldi	r24, 0x05	; 5
     e68:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     e6c:	60 e0       	ldi	r22, 0x00	; 0
     e6e:	88 e1       	ldi	r24, 0x18	; 24
     e70:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e74:	85 e0       	ldi	r24, 0x05	; 5
     e76:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     e7a:	60 e0       	ldi	r22, 0x00	; 0
     e7c:	89 e1       	ldi	r24, 0x19	; 25
     e7e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e82:	85 e0       	ldi	r24, 0x05	; 5
     e84:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     e88:	60 e0       	ldi	r22, 0x00	; 0
     e8a:	8a e1       	ldi	r24, 0x1A	; 26
     e8c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     e90:	83 e0       	ldi	r24, 0x03	; 3
     e92:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     e96:	60 e0       	ldi	r22, 0x00	; 0
     e98:	8b e1       	ldi	r24, 0x1B	; 27
     e9a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     e9e:	83 e6       	ldi	r24, 0x63	; 99
     ea0:	91 e0       	ldi	r25, 0x01	; 1
     ea2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     ea6:	08 95       	ret
	}
	else if (distance<=180 && distance>170)
     ea8:	9c 01       	movw	r18, r24
     eaa:	2b 5a       	subi	r18, 0xAB	; 171
     eac:	31 09       	sbc	r19, r1
     eae:	2a 30       	cpi	r18, 0x0A	; 10
     eb0:	31 05       	cpc	r19, r1
     eb2:	d0 f5       	brcc	.+116    	; 0xf28 <__stack+0x629>
	{
		lcd_gotoxy(20,0);
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	84 e1       	ldi	r24, 0x14	; 20
     eb8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ebc:	85 e0       	ldi	r24, 0x05	; 5
     ebe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     ec2:	60 e0       	ldi	r22, 0x00	; 0
     ec4:	85 e1       	ldi	r24, 0x15	; 21
     ec6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     eca:	85 e0       	ldi	r24, 0x05	; 5
     ecc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     ed0:	60 e0       	ldi	r22, 0x00	; 0
     ed2:	86 e1       	ldi	r24, 0x16	; 22
     ed4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ed8:	85 e0       	ldi	r24, 0x05	; 5
     eda:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     ede:	60 e0       	ldi	r22, 0x00	; 0
     ee0:	87 e1       	ldi	r24, 0x17	; 23
     ee2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ee6:	85 e0       	ldi	r24, 0x05	; 5
     ee8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     eec:	60 e0       	ldi	r22, 0x00	; 0
     eee:	88 e1       	ldi	r24, 0x18	; 24
     ef0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ef4:	85 e0       	ldi	r24, 0x05	; 5
     ef6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     efa:	60 e0       	ldi	r22, 0x00	; 0
     efc:	89 e1       	ldi	r24, 0x19	; 25
     efe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f02:	85 e0       	ldi	r24, 0x05	; 5
     f04:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     f08:	60 e0       	ldi	r22, 0x00	; 0
     f0a:	8a e1       	ldi	r24, 0x1A	; 26
     f0c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     f10:	84 e0       	ldi	r24, 0x04	; 4
     f12:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     f16:	60 e0       	ldi	r22, 0x00	; 0
     f18:	8b e1       	ldi	r24, 0x1B	; 27
     f1a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     f1e:	83 e6       	ldi	r24, 0x63	; 99
     f20:	91 e0       	ldi	r25, 0x01	; 1
     f22:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     f26:	08 95       	ret
	}
	else if (distance<=170 && distance>160)
     f28:	9c 01       	movw	r18, r24
     f2a:	21 5a       	subi	r18, 0xA1	; 161
     f2c:	31 09       	sbc	r19, r1
     f2e:	2a 30       	cpi	r18, 0x0A	; 10
     f30:	31 05       	cpc	r19, r1
     f32:	d0 f5       	brcc	.+116    	; 0xfa8 <__stack+0x6a9>
	{
		lcd_gotoxy(20,0);
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	84 e1       	ldi	r24, 0x14	; 20
     f38:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f3c:	85 e0       	ldi	r24, 0x05	; 5
     f3e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     f42:	60 e0       	ldi	r22, 0x00	; 0
     f44:	85 e1       	ldi	r24, 0x15	; 21
     f46:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f4a:	85 e0       	ldi	r24, 0x05	; 5
     f4c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     f50:	60 e0       	ldi	r22, 0x00	; 0
     f52:	86 e1       	ldi	r24, 0x16	; 22
     f54:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f58:	85 e0       	ldi	r24, 0x05	; 5
     f5a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     f5e:	60 e0       	ldi	r22, 0x00	; 0
     f60:	87 e1       	ldi	r24, 0x17	; 23
     f62:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f66:	85 e0       	ldi	r24, 0x05	; 5
     f68:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     f6c:	60 e0       	ldi	r22, 0x00	; 0
     f6e:	88 e1       	ldi	r24, 0x18	; 24
     f70:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f74:	85 e0       	ldi	r24, 0x05	; 5
     f76:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     f7a:	60 e0       	ldi	r22, 0x00	; 0
     f7c:	89 e1       	ldi	r24, 0x19	; 25
     f7e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f82:	85 e0       	ldi	r24, 0x05	; 5
     f84:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     f88:	60 e0       	ldi	r22, 0x00	; 0
     f8a:	8a e1       	ldi	r24, 0x1A	; 26
     f8c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f90:	85 e0       	ldi	r24, 0x05	; 5
     f92:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     f96:	60 e0       	ldi	r22, 0x00	; 0
     f98:	8b e1       	ldi	r24, 0x1B	; 27
     f9a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     f9e:	83 e6       	ldi	r24, 0x63	; 99
     fa0:	91 e0       	ldi	r25, 0x01	; 1
     fa2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     fa6:	08 95       	ret
	}
	else if (distance<=160 && distance>150)
     fa8:	9c 01       	movw	r18, r24
     faa:	27 59       	subi	r18, 0x97	; 151
     fac:	31 09       	sbc	r19, r1
     fae:	2a 30       	cpi	r18, 0x0A	; 10
     fb0:	31 05       	cpc	r19, r1
     fb2:	08 f0       	brcs	.+2      	; 0xfb6 <__stack+0x6b7>
     fb4:	41 c0       	rjmp	.+130    	; 0x1038 <__stack+0x739>
	{
		lcd_gotoxy(20,0);
     fb6:	60 e0       	ldi	r22, 0x00	; 0
     fb8:	84 e1       	ldi	r24, 0x14	; 20
     fba:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     fbe:	85 e0       	ldi	r24, 0x05	; 5
     fc0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     fc4:	60 e0       	ldi	r22, 0x00	; 0
     fc6:	85 e1       	ldi	r24, 0x15	; 21
     fc8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     fcc:	85 e0       	ldi	r24, 0x05	; 5
     fce:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     fd2:	60 e0       	ldi	r22, 0x00	; 0
     fd4:	86 e1       	ldi	r24, 0x16	; 22
     fd6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     fda:	85 e0       	ldi	r24, 0x05	; 5
     fdc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	87 e1       	ldi	r24, 0x17	; 23
     fe4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     fe8:	85 e0       	ldi	r24, 0x05	; 5
     fea:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     fee:	60 e0       	ldi	r22, 0x00	; 0
     ff0:	88 e1       	ldi	r24, 0x18	; 24
     ff2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ff6:	85 e0       	ldi	r24, 0x05	; 5
     ff8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     ffc:	60 e0       	ldi	r22, 0x00	; 0
     ffe:	89 e1       	ldi	r24, 0x19	; 25
    1000:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1004:	85 e0       	ldi	r24, 0x05	; 5
    1006:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    100a:	60 e0       	ldi	r22, 0x00	; 0
    100c:	8a e1       	ldi	r24, 0x1A	; 26
    100e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1012:	85 e0       	ldi	r24, 0x05	; 5
    1014:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1018:	60 e0       	ldi	r22, 0x00	; 0
    101a:	8b e1       	ldi	r24, 0x1B	; 27
    101c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	8c e1       	ldi	r24, 0x1C	; 28
    102a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    102e:	84 e6       	ldi	r24, 0x64	; 100
    1030:	91 e0       	ldi	r25, 0x01	; 1
    1032:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1036:	08 95       	ret
	}
	else if (distance<=150 && distance>140)
    1038:	9c 01       	movw	r18, r24
    103a:	2d 58       	subi	r18, 0x8D	; 141
    103c:	31 09       	sbc	r19, r1
    103e:	2a 30       	cpi	r18, 0x0A	; 10
    1040:	31 05       	cpc	r19, r1
    1042:	08 f0       	brcs	.+2      	; 0x1046 <__stack+0x747>
    1044:	41 c0       	rjmp	.+130    	; 0x10c8 <__stack+0x7c9>
	{
		lcd_gotoxy(20,0);
    1046:	60 e0       	ldi	r22, 0x00	; 0
    1048:	84 e1       	ldi	r24, 0x14	; 20
    104a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    104e:	85 e0       	ldi	r24, 0x05	; 5
    1050:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1054:	60 e0       	ldi	r22, 0x00	; 0
    1056:	85 e1       	ldi	r24, 0x15	; 21
    1058:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    105c:	85 e0       	ldi	r24, 0x05	; 5
    105e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1062:	60 e0       	ldi	r22, 0x00	; 0
    1064:	86 e1       	ldi	r24, 0x16	; 22
    1066:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    106a:	85 e0       	ldi	r24, 0x05	; 5
    106c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1070:	60 e0       	ldi	r22, 0x00	; 0
    1072:	87 e1       	ldi	r24, 0x17	; 23
    1074:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1078:	85 e0       	ldi	r24, 0x05	; 5
    107a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    107e:	60 e0       	ldi	r22, 0x00	; 0
    1080:	88 e1       	ldi	r24, 0x18	; 24
    1082:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1086:	85 e0       	ldi	r24, 0x05	; 5
    1088:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    108c:	60 e0       	ldi	r22, 0x00	; 0
    108e:	89 e1       	ldi	r24, 0x19	; 25
    1090:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1094:	85 e0       	ldi	r24, 0x05	; 5
    1096:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    109a:	60 e0       	ldi	r22, 0x00	; 0
    109c:	8a e1       	ldi	r24, 0x1A	; 26
    109e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10a2:	85 e0       	ldi	r24, 0x05	; 5
    10a4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    10a8:	60 e0       	ldi	r22, 0x00	; 0
    10aa:	8b e1       	ldi	r24, 0x1B	; 27
    10ac:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
    10b0:	82 e0       	ldi	r24, 0x02	; 2
    10b2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    10b6:	60 e0       	ldi	r22, 0x00	; 0
    10b8:	8c e1       	ldi	r24, 0x1C	; 28
    10ba:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    10be:	84 e6       	ldi	r24, 0x64	; 100
    10c0:	91 e0       	ldi	r25, 0x01	; 1
    10c2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    10c6:	08 95       	ret
	}
	else if (distance<=140 && distance>130)
    10c8:	9c 01       	movw	r18, r24
    10ca:	23 58       	subi	r18, 0x83	; 131
    10cc:	31 09       	sbc	r19, r1
    10ce:	2a 30       	cpi	r18, 0x0A	; 10
    10d0:	31 05       	cpc	r19, r1
    10d2:	08 f0       	brcs	.+2      	; 0x10d6 <__stack+0x7d7>
    10d4:	41 c0       	rjmp	.+130    	; 0x1158 <__stack+0x859>
	{
		lcd_gotoxy(20,0);
    10d6:	60 e0       	ldi	r22, 0x00	; 0
    10d8:	84 e1       	ldi	r24, 0x14	; 20
    10da:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10de:	85 e0       	ldi	r24, 0x05	; 5
    10e0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    10e4:	60 e0       	ldi	r22, 0x00	; 0
    10e6:	85 e1       	ldi	r24, 0x15	; 21
    10e8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10ec:	85 e0       	ldi	r24, 0x05	; 5
    10ee:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    10f2:	60 e0       	ldi	r22, 0x00	; 0
    10f4:	86 e1       	ldi	r24, 0x16	; 22
    10f6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10fa:	85 e0       	ldi	r24, 0x05	; 5
    10fc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	87 e1       	ldi	r24, 0x17	; 23
    1104:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1108:	85 e0       	ldi	r24, 0x05	; 5
    110a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    110e:	60 e0       	ldi	r22, 0x00	; 0
    1110:	88 e1       	ldi	r24, 0x18	; 24
    1112:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1116:	85 e0       	ldi	r24, 0x05	; 5
    1118:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    111c:	60 e0       	ldi	r22, 0x00	; 0
    111e:	89 e1       	ldi	r24, 0x19	; 25
    1120:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1124:	85 e0       	ldi	r24, 0x05	; 5
    1126:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    112a:	60 e0       	ldi	r22, 0x00	; 0
    112c:	8a e1       	ldi	r24, 0x1A	; 26
    112e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1132:	85 e0       	ldi	r24, 0x05	; 5
    1134:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1138:	60 e0       	ldi	r22, 0x00	; 0
    113a:	8b e1       	ldi	r24, 0x1B	; 27
    113c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
    1140:	83 e0       	ldi	r24, 0x03	; 3
    1142:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1146:	60 e0       	ldi	r22, 0x00	; 0
    1148:	8c e1       	ldi	r24, 0x1C	; 28
    114a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    114e:	84 e6       	ldi	r24, 0x64	; 100
    1150:	91 e0       	ldi	r25, 0x01	; 1
    1152:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1156:	08 95       	ret
	}
	else if (distance<=130 && distance>120)
    1158:	9c 01       	movw	r18, r24
    115a:	29 57       	subi	r18, 0x79	; 121
    115c:	31 09       	sbc	r19, r1
    115e:	2a 30       	cpi	r18, 0x0A	; 10
    1160:	31 05       	cpc	r19, r1
    1162:	08 f0       	brcs	.+2      	; 0x1166 <__stack+0x867>
    1164:	41 c0       	rjmp	.+130    	; 0x11e8 <__stack+0x8e9>
	{
		lcd_gotoxy(20,0);
    1166:	60 e0       	ldi	r22, 0x00	; 0
    1168:	84 e1       	ldi	r24, 0x14	; 20
    116a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    116e:	85 e0       	ldi	r24, 0x05	; 5
    1170:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1174:	60 e0       	ldi	r22, 0x00	; 0
    1176:	85 e1       	ldi	r24, 0x15	; 21
    1178:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    117c:	85 e0       	ldi	r24, 0x05	; 5
    117e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1182:	60 e0       	ldi	r22, 0x00	; 0
    1184:	86 e1       	ldi	r24, 0x16	; 22
    1186:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    118a:	85 e0       	ldi	r24, 0x05	; 5
    118c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1190:	60 e0       	ldi	r22, 0x00	; 0
    1192:	87 e1       	ldi	r24, 0x17	; 23
    1194:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1198:	85 e0       	ldi	r24, 0x05	; 5
    119a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    119e:	60 e0       	ldi	r22, 0x00	; 0
    11a0:	88 e1       	ldi	r24, 0x18	; 24
    11a2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    11a6:	85 e0       	ldi	r24, 0x05	; 5
    11a8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    11ac:	60 e0       	ldi	r22, 0x00	; 0
    11ae:	89 e1       	ldi	r24, 0x19	; 25
    11b0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    11b4:	85 e0       	ldi	r24, 0x05	; 5
    11b6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    11ba:	60 e0       	ldi	r22, 0x00	; 0
    11bc:	8a e1       	ldi	r24, 0x1A	; 26
    11be:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    11c2:	85 e0       	ldi	r24, 0x05	; 5
    11c4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    11c8:	60 e0       	ldi	r22, 0x00	; 0
    11ca:	8b e1       	ldi	r24, 0x1B	; 27
    11cc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
    11d0:	84 e0       	ldi	r24, 0x04	; 4
    11d2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    11d6:	60 e0       	ldi	r22, 0x00	; 0
    11d8:	8c e1       	ldi	r24, 0x1C	; 28
    11da:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    11de:	84 e6       	ldi	r24, 0x64	; 100
    11e0:	91 e0       	ldi	r25, 0x01	; 1
    11e2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    11e6:	08 95       	ret
	}
	else if (distance<=120 && distance>110)
    11e8:	9c 01       	movw	r18, r24
    11ea:	2f 56       	subi	r18, 0x6F	; 111
    11ec:	31 09       	sbc	r19, r1
    11ee:	2a 30       	cpi	r18, 0x0A	; 10
    11f0:	31 05       	cpc	r19, r1
    11f2:	08 f0       	brcs	.+2      	; 0x11f6 <__stack+0x8f7>
    11f4:	41 c0       	rjmp	.+130    	; 0x1278 <__stack+0x979>
	{
		lcd_gotoxy(20,0);
    11f6:	60 e0       	ldi	r22, 0x00	; 0
    11f8:	84 e1       	ldi	r24, 0x14	; 20
    11fa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    11fe:	85 e0       	ldi	r24, 0x05	; 5
    1200:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	85 e1       	ldi	r24, 0x15	; 21
    1208:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    120c:	85 e0       	ldi	r24, 0x05	; 5
    120e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1212:	60 e0       	ldi	r22, 0x00	; 0
    1214:	86 e1       	ldi	r24, 0x16	; 22
    1216:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    121a:	85 e0       	ldi	r24, 0x05	; 5
    121c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1220:	60 e0       	ldi	r22, 0x00	; 0
    1222:	87 e1       	ldi	r24, 0x17	; 23
    1224:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1228:	85 e0       	ldi	r24, 0x05	; 5
    122a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    122e:	60 e0       	ldi	r22, 0x00	; 0
    1230:	88 e1       	ldi	r24, 0x18	; 24
    1232:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1236:	85 e0       	ldi	r24, 0x05	; 5
    1238:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    123c:	60 e0       	ldi	r22, 0x00	; 0
    123e:	89 e1       	ldi	r24, 0x19	; 25
    1240:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1244:	85 e0       	ldi	r24, 0x05	; 5
    1246:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    124a:	60 e0       	ldi	r22, 0x00	; 0
    124c:	8a e1       	ldi	r24, 0x1A	; 26
    124e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1252:	85 e0       	ldi	r24, 0x05	; 5
    1254:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1258:	60 e0       	ldi	r22, 0x00	; 0
    125a:	8b e1       	ldi	r24, 0x1B	; 27
    125c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1260:	85 e0       	ldi	r24, 0x05	; 5
    1262:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1266:	60 e0       	ldi	r22, 0x00	; 0
    1268:	8c e1       	ldi	r24, 0x1C	; 28
    126a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    126e:	84 e6       	ldi	r24, 0x64	; 100
    1270:	91 e0       	ldi	r25, 0x01	; 1
    1272:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1276:	08 95       	ret
	}
	else if (distance<=110 && distance>100)
    1278:	9c 01       	movw	r18, r24
    127a:	25 56       	subi	r18, 0x65	; 101
    127c:	31 09       	sbc	r19, r1
    127e:	2a 30       	cpi	r18, 0x0A	; 10
    1280:	31 05       	cpc	r19, r1
    1282:	08 f0       	brcs	.+2      	; 0x1286 <__stack+0x987>
    1284:	48 c0       	rjmp	.+144    	; 0x1316 <__stack+0xa17>
	{
		lcd_gotoxy(20,0);
    1286:	60 e0       	ldi	r22, 0x00	; 0
    1288:	84 e1       	ldi	r24, 0x14	; 20
    128a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    128e:	85 e0       	ldi	r24, 0x05	; 5
    1290:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1294:	60 e0       	ldi	r22, 0x00	; 0
    1296:	85 e1       	ldi	r24, 0x15	; 21
    1298:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    129c:	85 e0       	ldi	r24, 0x05	; 5
    129e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    12a2:	60 e0       	ldi	r22, 0x00	; 0
    12a4:	86 e1       	ldi	r24, 0x16	; 22
    12a6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12aa:	85 e0       	ldi	r24, 0x05	; 5
    12ac:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    12b0:	60 e0       	ldi	r22, 0x00	; 0
    12b2:	87 e1       	ldi	r24, 0x17	; 23
    12b4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12b8:	85 e0       	ldi	r24, 0x05	; 5
    12ba:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    12be:	60 e0       	ldi	r22, 0x00	; 0
    12c0:	88 e1       	ldi	r24, 0x18	; 24
    12c2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12c6:	85 e0       	ldi	r24, 0x05	; 5
    12c8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    12cc:	60 e0       	ldi	r22, 0x00	; 0
    12ce:	89 e1       	ldi	r24, 0x19	; 25
    12d0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12d4:	85 e0       	ldi	r24, 0x05	; 5
    12d6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    12da:	60 e0       	ldi	r22, 0x00	; 0
    12dc:	8a e1       	ldi	r24, 0x1A	; 26
    12de:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12e2:	85 e0       	ldi	r24, 0x05	; 5
    12e4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    12e8:	60 e0       	ldi	r22, 0x00	; 0
    12ea:	8b e1       	ldi	r24, 0x1B	; 27
    12ec:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12f0:	85 e0       	ldi	r24, 0x05	; 5
    12f2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    12f6:	60 e0       	ldi	r22, 0x00	; 0
    12f8:	8c e1       	ldi	r24, 0x1C	; 28
    12fa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	8d e1       	ldi	r24, 0x1D	; 29
    1308:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    130c:	85 e6       	ldi	r24, 0x65	; 101
    130e:	91 e0       	ldi	r25, 0x01	; 1
    1310:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1314:	08 95       	ret
	}
	else if (distance<=100 && distance>90)
    1316:	9c 01       	movw	r18, r24
    1318:	2b 55       	subi	r18, 0x5B	; 91
    131a:	31 09       	sbc	r19, r1
    131c:	2a 30       	cpi	r18, 0x0A	; 10
    131e:	31 05       	cpc	r19, r1
    1320:	08 f0       	brcs	.+2      	; 0x1324 <__stack+0xa25>
    1322:	48 c0       	rjmp	.+144    	; 0x13b4 <__stack+0xab5>
	{
		lcd_gotoxy(20,0);
    1324:	60 e0       	ldi	r22, 0x00	; 0
    1326:	84 e1       	ldi	r24, 0x14	; 20
    1328:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    132c:	85 e0       	ldi	r24, 0x05	; 5
    132e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	85 e1       	ldi	r24, 0x15	; 21
    1336:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    133a:	85 e0       	ldi	r24, 0x05	; 5
    133c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1340:	60 e0       	ldi	r22, 0x00	; 0
    1342:	86 e1       	ldi	r24, 0x16	; 22
    1344:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1348:	85 e0       	ldi	r24, 0x05	; 5
    134a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    134e:	60 e0       	ldi	r22, 0x00	; 0
    1350:	87 e1       	ldi	r24, 0x17	; 23
    1352:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1356:	85 e0       	ldi	r24, 0x05	; 5
    1358:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    135c:	60 e0       	ldi	r22, 0x00	; 0
    135e:	88 e1       	ldi	r24, 0x18	; 24
    1360:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1364:	85 e0       	ldi	r24, 0x05	; 5
    1366:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    136a:	60 e0       	ldi	r22, 0x00	; 0
    136c:	89 e1       	ldi	r24, 0x19	; 25
    136e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1372:	85 e0       	ldi	r24, 0x05	; 5
    1374:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1378:	60 e0       	ldi	r22, 0x00	; 0
    137a:	8a e1       	ldi	r24, 0x1A	; 26
    137c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1380:	85 e0       	ldi	r24, 0x05	; 5
    1382:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1386:	60 e0       	ldi	r22, 0x00	; 0
    1388:	8b e1       	ldi	r24, 0x1B	; 27
    138a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    138e:	85 e0       	ldi	r24, 0x05	; 5
    1390:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1394:	60 e0       	ldi	r22, 0x00	; 0
    1396:	8c e1       	ldi	r24, 0x1C	; 28
    1398:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
    139c:	82 e0       	ldi	r24, 0x02	; 2
    139e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    13a2:	60 e0       	ldi	r22, 0x00	; 0
    13a4:	8d e1       	ldi	r24, 0x1D	; 29
    13a6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    13aa:	85 e6       	ldi	r24, 0x65	; 101
    13ac:	91 e0       	ldi	r25, 0x01	; 1
    13ae:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    13b2:	08 95       	ret
	}
	else if (distance<=90 && distance>80)
    13b4:	9c 01       	movw	r18, r24
    13b6:	21 55       	subi	r18, 0x51	; 81
    13b8:	31 09       	sbc	r19, r1
    13ba:	2a 30       	cpi	r18, 0x0A	; 10
    13bc:	31 05       	cpc	r19, r1
    13be:	08 f0       	brcs	.+2      	; 0x13c2 <__stack+0xac3>
    13c0:	48 c0       	rjmp	.+144    	; 0x1452 <__stack+0xb53>
	{
		lcd_gotoxy(20,0);
    13c2:	60 e0       	ldi	r22, 0x00	; 0
    13c4:	84 e1       	ldi	r24, 0x14	; 20
    13c6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13ca:	85 e0       	ldi	r24, 0x05	; 5
    13cc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    13d0:	60 e0       	ldi	r22, 0x00	; 0
    13d2:	85 e1       	ldi	r24, 0x15	; 21
    13d4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13d8:	85 e0       	ldi	r24, 0x05	; 5
    13da:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    13de:	60 e0       	ldi	r22, 0x00	; 0
    13e0:	86 e1       	ldi	r24, 0x16	; 22
    13e2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13e6:	85 e0       	ldi	r24, 0x05	; 5
    13e8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    13ec:	60 e0       	ldi	r22, 0x00	; 0
    13ee:	87 e1       	ldi	r24, 0x17	; 23
    13f0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13f4:	85 e0       	ldi	r24, 0x05	; 5
    13f6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    13fa:	60 e0       	ldi	r22, 0x00	; 0
    13fc:	88 e1       	ldi	r24, 0x18	; 24
    13fe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1402:	85 e0       	ldi	r24, 0x05	; 5
    1404:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    1408:	60 e0       	ldi	r22, 0x00	; 0
    140a:	89 e1       	ldi	r24, 0x19	; 25
    140c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1410:	85 e0       	ldi	r24, 0x05	; 5
    1412:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1416:	60 e0       	ldi	r22, 0x00	; 0
    1418:	8a e1       	ldi	r24, 0x1A	; 26
    141a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    141e:	85 e0       	ldi	r24, 0x05	; 5
    1420:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1424:	60 e0       	ldi	r22, 0x00	; 0
    1426:	8b e1       	ldi	r24, 0x1B	; 27
    1428:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    142c:	85 e0       	ldi	r24, 0x05	; 5
    142e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1432:	60 e0       	ldi	r22, 0x00	; 0
    1434:	8c e1       	ldi	r24, 0x1C	; 28
    1436:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
    143a:	83 e0       	ldi	r24, 0x03	; 3
    143c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    1440:	60 e0       	ldi	r22, 0x00	; 0
    1442:	8d e1       	ldi	r24, 0x1D	; 29
    1444:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    1448:	85 e6       	ldi	r24, 0x65	; 101
    144a:	91 e0       	ldi	r25, 0x01	; 1
    144c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1450:	08 95       	ret
	}
	else if (distance<=80 && distance>70)
    1452:	9c 01       	movw	r18, r24
    1454:	27 54       	subi	r18, 0x47	; 71
    1456:	31 09       	sbc	r19, r1
    1458:	2a 30       	cpi	r18, 0x0A	; 10
    145a:	31 05       	cpc	r19, r1
    145c:	08 f0       	brcs	.+2      	; 0x1460 <__stack+0xb61>
    145e:	48 c0       	rjmp	.+144    	; 0x14f0 <__stack+0xbf1>
	{
		lcd_gotoxy(20,0);
    1460:	60 e0       	ldi	r22, 0x00	; 0
    1462:	84 e1       	ldi	r24, 0x14	; 20
    1464:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1468:	85 e0       	ldi	r24, 0x05	; 5
    146a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    146e:	60 e0       	ldi	r22, 0x00	; 0
    1470:	85 e1       	ldi	r24, 0x15	; 21
    1472:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1476:	85 e0       	ldi	r24, 0x05	; 5
    1478:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    147c:	60 e0       	ldi	r22, 0x00	; 0
    147e:	86 e1       	ldi	r24, 0x16	; 22
    1480:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1484:	85 e0       	ldi	r24, 0x05	; 5
    1486:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    148a:	60 e0       	ldi	r22, 0x00	; 0
    148c:	87 e1       	ldi	r24, 0x17	; 23
    148e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1492:	85 e0       	ldi	r24, 0x05	; 5
    1494:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	88 e1       	ldi	r24, 0x18	; 24
    149c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    14a0:	85 e0       	ldi	r24, 0x05	; 5
    14a2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    14a6:	60 e0       	ldi	r22, 0x00	; 0
    14a8:	89 e1       	ldi	r24, 0x19	; 25
    14aa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    14ae:	85 e0       	ldi	r24, 0x05	; 5
    14b0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    14b4:	60 e0       	ldi	r22, 0x00	; 0
    14b6:	8a e1       	ldi	r24, 0x1A	; 26
    14b8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    14bc:	85 e0       	ldi	r24, 0x05	; 5
    14be:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    14c2:	60 e0       	ldi	r22, 0x00	; 0
    14c4:	8b e1       	ldi	r24, 0x1B	; 27
    14c6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    14ca:	85 e0       	ldi	r24, 0x05	; 5
    14cc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    14d0:	60 e0       	ldi	r22, 0x00	; 0
    14d2:	8c e1       	ldi	r24, 0x1C	; 28
    14d4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
    14d8:	84 e0       	ldi	r24, 0x04	; 4
    14da:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    14de:	60 e0       	ldi	r22, 0x00	; 0
    14e0:	8d e1       	ldi	r24, 0x1D	; 29
    14e2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    14e6:	85 e6       	ldi	r24, 0x65	; 101
    14e8:	91 e0       	ldi	r25, 0x01	; 1
    14ea:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    14ee:	08 95       	ret
	}
	else if (distance<=70 && distance>60)
    14f0:	9c 01       	movw	r18, r24
    14f2:	2d 53       	subi	r18, 0x3D	; 61
    14f4:	31 09       	sbc	r19, r1
    14f6:	2a 30       	cpi	r18, 0x0A	; 10
    14f8:	31 05       	cpc	r19, r1
    14fa:	08 f0       	brcs	.+2      	; 0x14fe <__stack+0xbff>
    14fc:	48 c0       	rjmp	.+144    	; 0x158e <__stack+0xc8f>
	{
		lcd_gotoxy(20,0);
    14fe:	60 e0       	ldi	r22, 0x00	; 0
    1500:	84 e1       	ldi	r24, 0x14	; 20
    1502:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1506:	85 e0       	ldi	r24, 0x05	; 5
    1508:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    150c:	60 e0       	ldi	r22, 0x00	; 0
    150e:	85 e1       	ldi	r24, 0x15	; 21
    1510:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1514:	85 e0       	ldi	r24, 0x05	; 5
    1516:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    151a:	60 e0       	ldi	r22, 0x00	; 0
    151c:	86 e1       	ldi	r24, 0x16	; 22
    151e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1522:	85 e0       	ldi	r24, 0x05	; 5
    1524:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1528:	60 e0       	ldi	r22, 0x00	; 0
    152a:	87 e1       	ldi	r24, 0x17	; 23
    152c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1530:	85 e0       	ldi	r24, 0x05	; 5
    1532:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    1536:	60 e0       	ldi	r22, 0x00	; 0
    1538:	88 e1       	ldi	r24, 0x18	; 24
    153a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    153e:	85 e0       	ldi	r24, 0x05	; 5
    1540:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    1544:	60 e0       	ldi	r22, 0x00	; 0
    1546:	89 e1       	ldi	r24, 0x19	; 25
    1548:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    154c:	85 e0       	ldi	r24, 0x05	; 5
    154e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	8a e1       	ldi	r24, 0x1A	; 26
    1556:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    155a:	85 e0       	ldi	r24, 0x05	; 5
    155c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1560:	60 e0       	ldi	r22, 0x00	; 0
    1562:	8b e1       	ldi	r24, 0x1B	; 27
    1564:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1568:	85 e0       	ldi	r24, 0x05	; 5
    156a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    156e:	60 e0       	ldi	r22, 0x00	; 0
    1570:	8c e1       	ldi	r24, 0x1C	; 28
    1572:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1576:	85 e0       	ldi	r24, 0x05	; 5
    1578:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    157c:	60 e0       	ldi	r22, 0x00	; 0
    157e:	8d e1       	ldi	r24, 0x1D	; 29
    1580:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    1584:	85 e6       	ldi	r24, 0x65	; 101
    1586:	91 e0       	ldi	r25, 0x01	; 1
    1588:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    158c:	08 95       	ret
	}
	else if (distance<=60 && distance>50)
    158e:	9c 01       	movw	r18, r24
    1590:	23 53       	subi	r18, 0x33	; 51
    1592:	31 09       	sbc	r19, r1
    1594:	2a 30       	cpi	r18, 0x0A	; 10
    1596:	31 05       	cpc	r19, r1
    1598:	08 f0       	brcs	.+2      	; 0x159c <__stack+0xc9d>
    159a:	4f c0       	rjmp	.+158    	; 0x163a <__stack+0xd3b>
	{
		lcd_gotoxy(20,0);
    159c:	60 e0       	ldi	r22, 0x00	; 0
    159e:	84 e1       	ldi	r24, 0x14	; 20
    15a0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15a4:	85 e0       	ldi	r24, 0x05	; 5
    15a6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    15aa:	60 e0       	ldi	r22, 0x00	; 0
    15ac:	85 e1       	ldi	r24, 0x15	; 21
    15ae:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15b2:	85 e0       	ldi	r24, 0x05	; 5
    15b4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    15b8:	60 e0       	ldi	r22, 0x00	; 0
    15ba:	86 e1       	ldi	r24, 0x16	; 22
    15bc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15c0:	85 e0       	ldi	r24, 0x05	; 5
    15c2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    15c6:	60 e0       	ldi	r22, 0x00	; 0
    15c8:	87 e1       	ldi	r24, 0x17	; 23
    15ca:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15ce:	85 e0       	ldi	r24, 0x05	; 5
    15d0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    15d4:	60 e0       	ldi	r22, 0x00	; 0
    15d6:	88 e1       	ldi	r24, 0x18	; 24
    15d8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15dc:	85 e0       	ldi	r24, 0x05	; 5
    15de:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    15e2:	60 e0       	ldi	r22, 0x00	; 0
    15e4:	89 e1       	ldi	r24, 0x19	; 25
    15e6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15ea:	85 e0       	ldi	r24, 0x05	; 5
    15ec:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    15f0:	60 e0       	ldi	r22, 0x00	; 0
    15f2:	8a e1       	ldi	r24, 0x1A	; 26
    15f4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15f8:	85 e0       	ldi	r24, 0x05	; 5
    15fa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    15fe:	60 e0       	ldi	r22, 0x00	; 0
    1600:	8b e1       	ldi	r24, 0x1B	; 27
    1602:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1606:	85 e0       	ldi	r24, 0x05	; 5
    1608:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    160c:	60 e0       	ldi	r22, 0x00	; 0
    160e:	8c e1       	ldi	r24, 0x1C	; 28
    1610:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1614:	85 e0       	ldi	r24, 0x05	; 5
    1616:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    161a:	60 e0       	ldi	r22, 0x00	; 0
    161c:	8d e1       	ldi	r24, 0x1D	; 29
    161e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
    1622:	81 e0       	ldi	r24, 0x01	; 1
    1624:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    1628:	60 e0       	ldi	r22, 0x00	; 0
    162a:	8e e1       	ldi	r24, 0x1E	; 30
    162c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    1630:	86 e6       	ldi	r24, 0x66	; 102
    1632:	91 e0       	ldi	r25, 0x01	; 1
    1634:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1638:	08 95       	ret
	}
	else if (distance<=50 && distance>40)
    163a:	9c 01       	movw	r18, r24
    163c:	29 52       	subi	r18, 0x29	; 41
    163e:	31 09       	sbc	r19, r1
    1640:	2a 30       	cpi	r18, 0x0A	; 10
    1642:	31 05       	cpc	r19, r1
    1644:	08 f0       	brcs	.+2      	; 0x1648 <__stack+0xd49>
    1646:	4f c0       	rjmp	.+158    	; 0x16e6 <__stack+0xde7>
	{
		lcd_gotoxy(20,0);
    1648:	60 e0       	ldi	r22, 0x00	; 0
    164a:	84 e1       	ldi	r24, 0x14	; 20
    164c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1650:	85 e0       	ldi	r24, 0x05	; 5
    1652:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1656:	60 e0       	ldi	r22, 0x00	; 0
    1658:	85 e1       	ldi	r24, 0x15	; 21
    165a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    165e:	85 e0       	ldi	r24, 0x05	; 5
    1660:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1664:	60 e0       	ldi	r22, 0x00	; 0
    1666:	86 e1       	ldi	r24, 0x16	; 22
    1668:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    166c:	85 e0       	ldi	r24, 0x05	; 5
    166e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	87 e1       	ldi	r24, 0x17	; 23
    1676:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    167a:	85 e0       	ldi	r24, 0x05	; 5
    167c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    1680:	60 e0       	ldi	r22, 0x00	; 0
    1682:	88 e1       	ldi	r24, 0x18	; 24
    1684:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1688:	85 e0       	ldi	r24, 0x05	; 5
    168a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    168e:	60 e0       	ldi	r22, 0x00	; 0
    1690:	89 e1       	ldi	r24, 0x19	; 25
    1692:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1696:	85 e0       	ldi	r24, 0x05	; 5
    1698:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    169c:	60 e0       	ldi	r22, 0x00	; 0
    169e:	8a e1       	ldi	r24, 0x1A	; 26
    16a0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16a4:	85 e0       	ldi	r24, 0x05	; 5
    16a6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    16aa:	60 e0       	ldi	r22, 0x00	; 0
    16ac:	8b e1       	ldi	r24, 0x1B	; 27
    16ae:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16b2:	85 e0       	ldi	r24, 0x05	; 5
    16b4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    16b8:	60 e0       	ldi	r22, 0x00	; 0
    16ba:	8c e1       	ldi	r24, 0x1C	; 28
    16bc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16c0:	85 e0       	ldi	r24, 0x05	; 5
    16c2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    16c6:	60 e0       	ldi	r22, 0x00	; 0
    16c8:	8d e1       	ldi	r24, 0x1D	; 29
    16ca:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
    16ce:	82 e0       	ldi	r24, 0x02	; 2
    16d0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    16d4:	60 e0       	ldi	r22, 0x00	; 0
    16d6:	8e e1       	ldi	r24, 0x1E	; 30
    16d8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    16dc:	86 e6       	ldi	r24, 0x66	; 102
    16de:	91 e0       	ldi	r25, 0x01	; 1
    16e0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    16e4:	08 95       	ret
	}
	else if (distance<=40 && distance>30)
    16e6:	9c 01       	movw	r18, r24
    16e8:	2f 51       	subi	r18, 0x1F	; 31
    16ea:	31 09       	sbc	r19, r1
    16ec:	2a 30       	cpi	r18, 0x0A	; 10
    16ee:	31 05       	cpc	r19, r1
    16f0:	08 f0       	brcs	.+2      	; 0x16f4 <__stack+0xdf5>
    16f2:	4f c0       	rjmp	.+158    	; 0x1792 <__stack+0xe93>
	{
		lcd_gotoxy(20,0);
    16f4:	60 e0       	ldi	r22, 0x00	; 0
    16f6:	84 e1       	ldi	r24, 0x14	; 20
    16f8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16fc:	85 e0       	ldi	r24, 0x05	; 5
    16fe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1702:	60 e0       	ldi	r22, 0x00	; 0
    1704:	85 e1       	ldi	r24, 0x15	; 21
    1706:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    170a:	85 e0       	ldi	r24, 0x05	; 5
    170c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1710:	60 e0       	ldi	r22, 0x00	; 0
    1712:	86 e1       	ldi	r24, 0x16	; 22
    1714:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1718:	85 e0       	ldi	r24, 0x05	; 5
    171a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    171e:	60 e0       	ldi	r22, 0x00	; 0
    1720:	87 e1       	ldi	r24, 0x17	; 23
    1722:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1726:	85 e0       	ldi	r24, 0x05	; 5
    1728:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    172c:	60 e0       	ldi	r22, 0x00	; 0
    172e:	88 e1       	ldi	r24, 0x18	; 24
    1730:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1734:	85 e0       	ldi	r24, 0x05	; 5
    1736:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    173a:	60 e0       	ldi	r22, 0x00	; 0
    173c:	89 e1       	ldi	r24, 0x19	; 25
    173e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1742:	85 e0       	ldi	r24, 0x05	; 5
    1744:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1748:	60 e0       	ldi	r22, 0x00	; 0
    174a:	8a e1       	ldi	r24, 0x1A	; 26
    174c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1750:	85 e0       	ldi	r24, 0x05	; 5
    1752:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1756:	60 e0       	ldi	r22, 0x00	; 0
    1758:	8b e1       	ldi	r24, 0x1B	; 27
    175a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    175e:	85 e0       	ldi	r24, 0x05	; 5
    1760:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1764:	60 e0       	ldi	r22, 0x00	; 0
    1766:	8c e1       	ldi	r24, 0x1C	; 28
    1768:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    176c:	85 e0       	ldi	r24, 0x05	; 5
    176e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    1772:	60 e0       	ldi	r22, 0x00	; 0
    1774:	8d e1       	ldi	r24, 0x1D	; 29
    1776:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
    177a:	83 e0       	ldi	r24, 0x03	; 3
    177c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    1780:	60 e0       	ldi	r22, 0x00	; 0
    1782:	8e e1       	ldi	r24, 0x1E	; 30
    1784:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    1788:	86 e6       	ldi	r24, 0x66	; 102
    178a:	91 e0       	ldi	r25, 0x01	; 1
    178c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1790:	08 95       	ret
	}
	else if (distance<=30 && distance>20)
    1792:	9c 01       	movw	r18, r24
    1794:	25 51       	subi	r18, 0x15	; 21
    1796:	31 09       	sbc	r19, r1
    1798:	2a 30       	cpi	r18, 0x0A	; 10
    179a:	31 05       	cpc	r19, r1
    179c:	08 f0       	brcs	.+2      	; 0x17a0 <__stack+0xea1>
    179e:	4f c0       	rjmp	.+158    	; 0x183e <__stack+0xf3f>
	{
		lcd_gotoxy(20,0);
    17a0:	60 e0       	ldi	r22, 0x00	; 0
    17a2:	84 e1       	ldi	r24, 0x14	; 20
    17a4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17a8:	85 e0       	ldi	r24, 0x05	; 5
    17aa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    17ae:	60 e0       	ldi	r22, 0x00	; 0
    17b0:	85 e1       	ldi	r24, 0x15	; 21
    17b2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17b6:	85 e0       	ldi	r24, 0x05	; 5
    17b8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	86 e1       	ldi	r24, 0x16	; 22
    17c0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17c4:	85 e0       	ldi	r24, 0x05	; 5
    17c6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    17ca:	60 e0       	ldi	r22, 0x00	; 0
    17cc:	87 e1       	ldi	r24, 0x17	; 23
    17ce:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17d2:	85 e0       	ldi	r24, 0x05	; 5
    17d4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    17d8:	60 e0       	ldi	r22, 0x00	; 0
    17da:	88 e1       	ldi	r24, 0x18	; 24
    17dc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17e0:	85 e0       	ldi	r24, 0x05	; 5
    17e2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    17e6:	60 e0       	ldi	r22, 0x00	; 0
    17e8:	89 e1       	ldi	r24, 0x19	; 25
    17ea:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17ee:	85 e0       	ldi	r24, 0x05	; 5
    17f0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    17f4:	60 e0       	ldi	r22, 0x00	; 0
    17f6:	8a e1       	ldi	r24, 0x1A	; 26
    17f8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17fc:	85 e0       	ldi	r24, 0x05	; 5
    17fe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1802:	60 e0       	ldi	r22, 0x00	; 0
    1804:	8b e1       	ldi	r24, 0x1B	; 27
    1806:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    180a:	85 e0       	ldi	r24, 0x05	; 5
    180c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1810:	60 e0       	ldi	r22, 0x00	; 0
    1812:	8c e1       	ldi	r24, 0x1C	; 28
    1814:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1818:	85 e0       	ldi	r24, 0x05	; 5
    181a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    181e:	60 e0       	ldi	r22, 0x00	; 0
    1820:	8d e1       	ldi	r24, 0x1D	; 29
    1822:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
    1826:	84 e0       	ldi	r24, 0x04	; 4
    1828:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    182c:	60 e0       	ldi	r22, 0x00	; 0
    182e:	8e e1       	ldi	r24, 0x1E	; 30
    1830:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    1834:	86 e6       	ldi	r24, 0x66	; 102
    1836:	91 e0       	ldi	r25, 0x01	; 1
    1838:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    183c:	08 95       	ret
	}
	else if (distance<=20)
    183e:	45 97       	sbiw	r24, 0x15	; 21
    1840:	0c f0       	brlt	.+2      	; 0x1844 <__stack+0xf45>
    1842:	4e c0       	rjmp	.+156    	; 0x18e0 <__stack+0xfe1>
	{
		lcd_gotoxy(20,0);
    1844:	60 e0       	ldi	r22, 0x00	; 0
    1846:	84 e1       	ldi	r24, 0x14	; 20
    1848:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    184c:	85 e0       	ldi	r24, 0x05	; 5
    184e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1852:	60 e0       	ldi	r22, 0x00	; 0
    1854:	85 e1       	ldi	r24, 0x15	; 21
    1856:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    185a:	85 e0       	ldi	r24, 0x05	; 5
    185c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1860:	60 e0       	ldi	r22, 0x00	; 0
    1862:	86 e1       	ldi	r24, 0x16	; 22
    1864:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1868:	85 e0       	ldi	r24, 0x05	; 5
    186a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    186e:	60 e0       	ldi	r22, 0x00	; 0
    1870:	87 e1       	ldi	r24, 0x17	; 23
    1872:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1876:	85 e0       	ldi	r24, 0x05	; 5
    1878:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    187c:	60 e0       	ldi	r22, 0x00	; 0
    187e:	88 e1       	ldi	r24, 0x18	; 24
    1880:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1884:	85 e0       	ldi	r24, 0x05	; 5
    1886:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    188a:	60 e0       	ldi	r22, 0x00	; 0
    188c:	89 e1       	ldi	r24, 0x19	; 25
    188e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1892:	85 e0       	ldi	r24, 0x05	; 5
    1894:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1898:	60 e0       	ldi	r22, 0x00	; 0
    189a:	8a e1       	ldi	r24, 0x1A	; 26
    189c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18a0:	85 e0       	ldi	r24, 0x05	; 5
    18a2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    18a6:	60 e0       	ldi	r22, 0x00	; 0
    18a8:	8b e1       	ldi	r24, 0x1B	; 27
    18aa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18ae:	85 e0       	ldi	r24, 0x05	; 5
    18b0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    18b4:	60 e0       	ldi	r22, 0x00	; 0
    18b6:	8c e1       	ldi	r24, 0x1C	; 28
    18b8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18bc:	85 e0       	ldi	r24, 0x05	; 5
    18be:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    18c2:	60 e0       	ldi	r22, 0x00	; 0
    18c4:	8d e1       	ldi	r24, 0x1D	; 29
    18c6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18ca:	85 e0       	ldi	r24, 0x05	; 5
    18cc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    18d0:	60 e0       	ldi	r22, 0x00	; 0
    18d2:	8e e1       	ldi	r24, 0x1E	; 30
    18d4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    18d8:	86 e6       	ldi	r24, 0x66	; 102
    18da:	91 e0       	ldi	r25, 0x01	; 1
    18dc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    18e0:	08 95       	ret

000018e2 <pins_config>:

//initial configuration of pins
void pins_config(void)
{
	//configure LED pins as output
	GPIO_config_output(&DDRC,LED1);
    18e2:	61 e0       	ldi	r22, 0x01	; 1
    18e4:	87 e2       	ldi	r24, 0x27	; 39
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED2);
    18ec:	62 e0       	ldi	r22, 0x02	; 2
    18ee:	87 e2       	ldi	r24, 0x27	; 39
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED3);
    18f6:	63 e0       	ldi	r22, 0x03	; 3
    18f8:	87 e2       	ldi	r24, 0x27	; 39
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED4);
    1900:	64 e0       	ldi	r22, 0x04	; 4
    1902:	87 e2       	ldi	r24, 0x27	; 39
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED5);
    190a:	65 e0       	ldi	r22, 0x05	; 5
    190c:	87 e2       	ldi	r24, 0x27	; 39
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED_BLINK); // ??????????
    1914:	60 e0       	ldi	r22, 0x00	; 0
    1916:	87 e2       	ldi	r24, 0x27	; 39
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	
	//configure sound pin as output
	GPIO_config_output(&DDRB, alarm); 
    191e:	64 e0       	ldi	r22, 0x04	; 4
    1920:	84 e2       	ldi	r24, 0x24	; 36
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	
	//configure echo pins as inputs without pull up resistor
	GPIO_config_input_nopull(&DDRD, Front_Echo);
    1928:	63 e0       	ldi	r22, 0x03	; 3
    192a:	8a e2       	ldi	r24, 0x2A	; 42
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	0e 94 5f 00 	call	0xbe	; 0xbe <GPIO_config_input_nopull>
	GPIO_config_input_nopull(&DDRD, Back_Echo);
    1932:	62 e0       	ldi	r22, 0x02	; 2
    1934:	8a e2       	ldi	r24, 0x2A	; 42
    1936:	90 e0       	ldi	r25, 0x00	; 0
    1938:	0e 94 5f 00 	call	0xbe	; 0xbe <GPIO_config_input_nopull>
		
	//configure trigger pins as outputs and set them to low
	GPIO_config_output(&DDRB, Front_trigger);
    193c:	63 e0       	ldi	r22, 0x03	; 3
    193e:	84 e2       	ldi	r24, 0x24	; 36
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRB, Back_trigger);
    1946:	62 e0       	ldi	r22, 0x02	; 2
    1948:	84 e2       	ldi	r24, 0x24	; 36
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_write_low(&PORTB, Front_trigger);
    1950:	63 e0       	ldi	r22, 0x03	; 3
    1952:	85 e2       	ldi	r24, 0x25	; 37
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTB, Back_trigger);
    195a:	62 e0       	ldi	r22, 0x02	; 2
    195c:	85 e2       	ldi	r24, 0x25	; 37
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTB, LED_BLINK);
    1964:	60 e0       	ldi	r22, 0x00	; 0
    1966:	85 e2       	ldi	r24, 0x25	; 37
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
		
	//configure alarm as output and turn it off
	GPIO_config_output(&DDRB, alarm);
    196e:	64 e0       	ldi	r22, 0x04	; 4
    1970:	84 e2       	ldi	r24, 0x24	; 36
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_write_low(&PORTB, alarm);
    1978:	64 e0       	ldi	r22, 0x04	; 4
    197a:	85 e2       	ldi	r24, 0x25	; 37
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
    1982:	08 95       	ret

00001984 <lcd_config>:
}

void lcd_config(void)
{
    1984:	ef 92       	push	r14
    1986:	ff 92       	push	r15
    1988:	0f 93       	push	r16
    198a:	1f 93       	push	r17
    198c:	cf 93       	push	r28
    198e:	df 93       	push	r29
    1990:	cd b7       	in	r28, 0x3d	; 61
    1992:	de b7       	in	r29, 0x3e	; 62
    1994:	e0 97       	sbiw	r28, 0x30	; 48
    1996:	0f b6       	in	r0, 0x3f	; 63
    1998:	f8 94       	cli
    199a:	de bf       	out	0x3e, r29	; 62
    199c:	0f be       	out	0x3f, r0	; 63
    199e:	cd bf       	out	0x3d, r28	; 61
	//array of custom characters representing different stages of progress on one segment of load bar
	uint8_t customChar[] = 
    19a0:	80 e3       	ldi	r24, 0x30	; 48
    19a2:	e1 e0       	ldi	r30, 0x01	; 1
    19a4:	f1 e0       	ldi	r31, 0x01	; 1
    19a6:	de 01       	movw	r26, r28
    19a8:	11 96       	adiw	r26, 0x01	; 1
    19aa:	01 90       	ld	r0, Z+
    19ac:	0d 92       	st	X+, r0
    19ae:	8a 95       	dec	r24
    19b0:	e1 f7       	brne	.-8      	; 0x19aa <lcd_config+0x26>
		// addr 5: |||||
		0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111,
	};
		
	//initialize LCD, display strings that do not change
	lcd_init(LCD_DISP_ON);
    19b2:	8c e0       	ldi	r24, 0x0C	; 12
    19b4:	0e 94 04 01 	call	0x208	; 0x208 <lcd_init>
	lcd_gotoxy(1, 0);
    19b8:	60 e0       	ldi	r22, 0x00	; 0
    19ba:	81 e0       	ldi	r24, 0x01	; 1
    19bc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
	lcd_puts("dist_front:");
    19c0:	82 e7       	ldi	r24, 0x72	; 114
    19c2:	91 e0       	ldi	r25, 0x01	; 1
    19c4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
	lcd_gotoxy(1, 2);
    19c8:	62 e0       	ldi	r22, 0x02	; 2
    19ca:	81 e0       	ldi	r24, 0x01	; 1
    19cc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
	lcd_puts("dist_back :");
    19d0:	8e e7       	ldi	r24, 0x7E	; 126
    19d2:	91 e0       	ldi	r25, 0x01	; 1
    19d4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
		
	//set pointer at beginning of CGRAM
	lcd_command(1 << LCD_CGRAM);
    19d8:	80 e4       	ldi	r24, 0x40	; 64
    19da:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    19de:	8e 01       	movw	r16, r28
    19e0:	0f 5f       	subi	r16, 0xFF	; 255
    19e2:	1f 4f       	sbci	r17, 0xFF	; 255
    19e4:	7e 01       	movw	r14, r28
    19e6:	81 e3       	ldi	r24, 0x31	; 49
    19e8:	e8 0e       	add	r14, r24
    19ea:	f1 1c       	adc	r15, r1
	for (uint8_t i = 0; i < 48; i++)
	{
		// Store all new chars to memory line by line
		lcd_data(customChar[i]);
    19ec:	f8 01       	movw	r30, r16
    19ee:	81 91       	ld	r24, Z+
    19f0:	8f 01       	movw	r16, r30
    19f2:	0e 94 de 00 	call	0x1bc	; 0x1bc <lcd_data>
	lcd_gotoxy(1, 2);
	lcd_puts("dist_back :");
		
	//set pointer at beginning of CGRAM
	lcd_command(1 << LCD_CGRAM);
	for (uint8_t i = 0; i < 48; i++)
    19f6:	0e 15       	cp	r16, r14
    19f8:	1f 05       	cpc	r17, r15
    19fa:	c1 f7       	brne	.-16     	; 0x19ec <lcd_config+0x68>
		// Store all new chars to memory line by line
		lcd_data(customChar[i]);
	}
	
	// Set DDRAM address
	lcd_command(1 << LCD_DDRAM);
    19fc:	80 e8       	ldi	r24, 0x80	; 128
    19fe:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
	

}
    1a02:	e0 96       	adiw	r28, 0x30	; 48
    1a04:	0f b6       	in	r0, 0x3f	; 63
    1a06:	f8 94       	cli
    1a08:	de bf       	out	0x3e, r29	; 62
    1a0a:	0f be       	out	0x3f, r0	; 63
    1a0c:	cd bf       	out	0x3d, r28	; 61
    1a0e:	df 91       	pop	r29
    1a10:	cf 91       	pop	r28
    1a12:	1f 91       	pop	r17
    1a14:	0f 91       	pop	r16
    1a16:	ff 90       	pop	r15
    1a18:	ef 90       	pop	r14
    1a1a:	08 95       	ret

00001a1c <LEDs_off>:

//turn all LEDs off
void LEDs_off(void)
{
	GPIO_write_low(&PORTC, LED1);
    1a1c:	61 e0       	ldi	r22, 0x01	; 1
    1a1e:	88 e2       	ldi	r24, 0x28	; 40
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTC, LED2);
    1a26:	62 e0       	ldi	r22, 0x02	; 2
    1a28:	88 e2       	ldi	r24, 0x28	; 40
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTC, LED3);
    1a30:	63 e0       	ldi	r22, 0x03	; 3
    1a32:	88 e2       	ldi	r24, 0x28	; 40
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTC, LED4);
    1a3a:	64 e0       	ldi	r22, 0x04	; 4
    1a3c:	88 e2       	ldi	r24, 0x28	; 40
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTC, LED5);
    1a44:	65 e0       	ldi	r22, 0x05	; 5
    1a46:	88 e2       	ldi	r24, 0x28	; 40
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
    1a4e:	08 95       	ret

00001a50 <LED_toggle>:
}

//togggles number of leds on led stripe
void LED_toggle(int number_of_LEDs)
{
	switch(number_of_LEDs)
    1a50:	83 30       	cpi	r24, 0x03	; 3
    1a52:	91 05       	cpc	r25, r1
    1a54:	f1 f0       	breq	.+60     	; 0x1a92 <LED_toggle+0x42>
    1a56:	34 f4       	brge	.+12     	; 0x1a64 <LED_toggle+0x14>
    1a58:	81 30       	cpi	r24, 0x01	; 1
    1a5a:	91 05       	cpc	r25, r1
    1a5c:	49 f0       	breq	.+18     	; 0x1a70 <LED_toggle+0x20>
    1a5e:	02 97       	sbiw	r24, 0x02	; 2
    1a60:	69 f0       	breq	.+26     	; 0x1a7c <LED_toggle+0x2c>
    1a62:	08 95       	ret
    1a64:	84 30       	cpi	r24, 0x04	; 4
    1a66:	91 05       	cpc	r25, r1
    1a68:	21 f1       	breq	.+72     	; 0x1ab2 <LED_toggle+0x62>
    1a6a:	05 97       	sbiw	r24, 0x05	; 5
    1a6c:	b9 f1       	breq	.+110    	; 0x1adc <LED_toggle+0x8c>
    1a6e:	08 95       	ret
	{
		case 1:
			GPIO_toggle(&PORTC, LED1);
    1a70:	61 e0       	ldi	r22, 0x01	; 1
    1a72:	88 e2       	ldi	r24, 0x28	; 40
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			break;
    1a7a:	08 95       	ret
		case 2:
			GPIO_toggle(&PORTC, LED1);
    1a7c:	61 e0       	ldi	r22, 0x01	; 1
    1a7e:	88 e2       	ldi	r24, 0x28	; 40
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED2);
    1a86:	62 e0       	ldi	r22, 0x02	; 2
    1a88:	88 e2       	ldi	r24, 0x28	; 40
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			break;
    1a90:	08 95       	ret
		case 3:
			GPIO_toggle(&PORTC, LED1);
    1a92:	61 e0       	ldi	r22, 0x01	; 1
    1a94:	88 e2       	ldi	r24, 0x28	; 40
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED2);
    1a9c:	62 e0       	ldi	r22, 0x02	; 2
    1a9e:	88 e2       	ldi	r24, 0x28	; 40
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED3);
    1aa6:	63 e0       	ldi	r22, 0x03	; 3
    1aa8:	88 e2       	ldi	r24, 0x28	; 40
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			break;
    1ab0:	08 95       	ret
		case 4:
			GPIO_toggle(&PORTC, LED1);
    1ab2:	61 e0       	ldi	r22, 0x01	; 1
    1ab4:	88 e2       	ldi	r24, 0x28	; 40
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED2);
    1abc:	62 e0       	ldi	r22, 0x02	; 2
    1abe:	88 e2       	ldi	r24, 0x28	; 40
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED3);
    1ac6:	63 e0       	ldi	r22, 0x03	; 3
    1ac8:	88 e2       	ldi	r24, 0x28	; 40
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED4);
    1ad0:	64 e0       	ldi	r22, 0x04	; 4
    1ad2:	88 e2       	ldi	r24, 0x28	; 40
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			break;
    1ada:	08 95       	ret
		case 5:
			GPIO_toggle(&PORTC, LED1);
    1adc:	61 e0       	ldi	r22, 0x01	; 1
    1ade:	88 e2       	ldi	r24, 0x28	; 40
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED2);
    1ae6:	62 e0       	ldi	r22, 0x02	; 2
    1ae8:	88 e2       	ldi	r24, 0x28	; 40
    1aea:	90 e0       	ldi	r25, 0x00	; 0
    1aec:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED3);
    1af0:	63 e0       	ldi	r22, 0x03	; 3
    1af2:	88 e2       	ldi	r24, 0x28	; 40
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED4);
    1afa:	64 e0       	ldi	r22, 0x04	; 4
    1afc:	88 e2       	ldi	r24, 0x28	; 40
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED5);
    1b04:	65 e0       	ldi	r22, 0x05	; 5
    1b06:	88 e2       	ldi	r24, 0x28	; 40
    1b08:	90 e0       	ldi	r25, 0x00	; 0
    1b0a:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
    1b0e:	08 95       	ret

00001b10 <main>:


int main(void)
{
	//initial configuration of LCD display
	lcd_config();
    1b10:	0e 94 c2 0c 	call	0x1984	; 0x1984 <lcd_config>

	//initialize UART
	uart_init(UART_BAUD_SELECT(9600,F_CPU));
    1b14:	87 e6       	ldi	r24, 0x67	; 103
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	0e 94 10 10 	call	0x2020	; 0x2020 <uart_init>
		
	//initial configuration of pins
	pins_config();	
    1b1c:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <pins_config>
						
	//turn LEDs off
	LEDs_off();						
    1b20:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <LEDs_off>
	
	//enable overflow interrupt and set default value
	TIM2_overflow_16ms();
    1b24:	e1 eb       	ldi	r30, 0xB1	; 177
    1b26:	f0 e0       	ldi	r31, 0x00	; 0
    1b28:	80 81       	ld	r24, Z
    1b2a:	87 60       	ori	r24, 0x07	; 7
    1b2c:	80 83       	st	Z, r24
	TIM2_overflow_interrupt_enable();
    1b2e:	e0 e7       	ldi	r30, 0x70	; 112
    1b30:	f0 e0       	ldi	r31, 0x00	; 0
    1b32:	80 81       	ld	r24, Z
    1b34:	81 60       	ori	r24, 0x01	; 1
    1b36:	80 83       	st	Z, r24
	
	//Rising edge of INT1 generates an interrupt request
	EICRA |= (1 << ISC11) | (1 << ISC10);   
    1b38:	e9 e6       	ldi	r30, 0x69	; 105
    1b3a:	f0 e0       	ldi	r31, 0x00	; 0
    1b3c:	80 81       	ld	r24, Z
    1b3e:	8c 60       	ori	r24, 0x0C	; 12
    1b40:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1);
    1b42:	e9 9a       	sbi	0x1d, 1	; 29
	
	//Rising edge of INT0 generates an interrupt request
	EICRA |= (1 << ISC01) | (1 << ISC00);
    1b44:	80 81       	ld	r24, Z
    1b46:	83 60       	ori	r24, 0x03	; 3
    1b48:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);
    1b4a:	e8 9a       	sbi	0x1d, 0	; 29
	
	sei(); //enable interrupts
    1b4c:	78 94       	sei
		   }
		}

		int smaller_distance = 1;					//for saving the smaller distance of the 2 sensors

		if(distances[0] > distances[1])
    1b4e:	04 ee       	ldi	r16, 0xE4	; 228
    1b50:	11 e0       	ldi	r17, 0x01	; 1
		}	
		
		//change sensor id for next loop
		if (sensor_id==0)
		{
			sensor_id=1;
    1b52:	ff 24       	eor	r15, r15
    1b54:	f3 94       	inc	r15
	sei(); //enable interrupts
	
    while (1) 
    {
		//set frequency signaling diode to loew
		GPIO_write_low(&PORTB, alarm);
    1b56:	64 e0       	ldi	r22, 0x04	; 4
    1b58:	85 e2       	ldi	r24, 0x25	; 37
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
		if (trigger_enable==1)
    1b60:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1b64:	81 30       	cpi	r24, 0x01	; 1
    1b66:	89 f5       	brne	.+98     	; 0x1bca <main+0xba>
		{
		   if (sensor_id == 1)
    1b68:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <sensor_id>
    1b6c:	81 30       	cpi	r24, 0x01	; 1
    1b6e:	b9 f4       	brne	.+46     	; 0x1b9e <main+0x8e>
    1b70:	87 ec       	ldi	r24, 0xC7	; 199
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	01 97       	sbiw	r24, 0x01	; 1
    1b76:	f1 f7       	brne	.-4      	; 0x1b74 <main+0x64>
    1b78:	00 c0       	rjmp	.+0      	; 0x1b7a <main+0x6a>
    1b7a:	00 00       	nop
		   {
			    _delay_us(50);
				//send start pulse (10us) to back sensor
				GPIO_write_high(&PORTB,Back_trigger);
    1b7c:	62 e0       	ldi	r22, 0x02	; 2
    1b7e:	85 e2       	ldi	r24, 0x25	; 37
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	0e 94 7d 00 	call	0xfa	; 0xfa <GPIO_write_high>
    1b86:	95 e3       	ldi	r25, 0x35	; 53
    1b88:	9a 95       	dec	r25
    1b8a:	f1 f7       	brne	.-4      	; 0x1b88 <main+0x78>
    1b8c:	00 00       	nop
				_delay_us(10);
				GPIO_write_low(&PORTB,Back_trigger);
    1b8e:	62 e0       	ldi	r22, 0x02	; 2
    1b90:	85 e2       	ldi	r24, 0x25	; 37
    1b92:	90 e0       	ldi	r25, 0x00	; 0
    1b94:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
				trigger_enable = 0;						//disable sending start pulse			   
    1b98:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
    1b9c:	16 c0       	rjmp	.+44     	; 0x1bca <main+0xba>
    1b9e:	e7 ec       	ldi	r30, 0xC7	; 199
    1ba0:	f0 e0       	ldi	r31, 0x00	; 0
    1ba2:	31 97       	sbiw	r30, 0x01	; 1
    1ba4:	f1 f7       	brne	.-4      	; 0x1ba2 <main+0x92>
    1ba6:	00 c0       	rjmp	.+0      	; 0x1ba8 <main+0x98>
    1ba8:	00 00       	nop
		   }
		   else
		   {
			   _delay_us(50);
				GPIO_write_high(&PORTB,Front_trigger);
    1baa:	63 e0       	ldi	r22, 0x03	; 3
    1bac:	85 e2       	ldi	r24, 0x25	; 37
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	0e 94 7d 00 	call	0xfa	; 0xfa <GPIO_write_high>
    1bb4:	f5 e3       	ldi	r31, 0x35	; 53
    1bb6:	fa 95       	dec	r31
    1bb8:	f1 f7       	brne	.-4      	; 0x1bb6 <main+0xa6>
    1bba:	00 00       	nop
				_delay_us(10);
				GPIO_write_low(&PORTB,Front_trigger);
    1bbc:	63 e0       	ldi	r22, 0x03	; 3
    1bbe:	85 e2       	ldi	r24, 0x25	; 37
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
				trigger_enable = 0;						//disable sending start pulse
    1bc6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
		   }
		}

		int smaller_distance = 1;					//for saving the smaller distance of the 2 sensors

		if(distances[0] > distances[1])
    1bca:	f8 01       	movw	r30, r16
    1bcc:	60 81       	ld	r22, Z
    1bce:	71 81       	ldd	r23, Z+1	; 0x01
    1bd0:	82 81       	ldd	r24, Z+2	; 0x02
    1bd2:	93 81       	ldd	r25, Z+3	; 0x03
    1bd4:	24 81       	ldd	r18, Z+4	; 0x04
    1bd6:	35 81       	ldd	r19, Z+5	; 0x05
    1bd8:	46 81       	ldd	r20, Z+6	; 0x06
    1bda:	57 81       	ldd	r21, Z+7	; 0x07
    1bdc:	0e 94 6a 11 	call	0x22d4	; 0x22d4 <__gesf2>
    1be0:	18 16       	cp	r1, r24
    1be2:	4c f4       	brge	.+18     	; 0x1bf6 <main+0xe6>
		{
			smaller_distance = distances[1];	
    1be4:	f8 01       	movw	r30, r16
    1be6:	64 81       	ldd	r22, Z+4	; 0x04
    1be8:	75 81       	ldd	r23, Z+5	; 0x05
    1bea:	86 81       	ldd	r24, Z+6	; 0x06
    1bec:	97 81       	ldd	r25, Z+7	; 0x07
    1bee:	0e 94 bf 10 	call	0x217e	; 0x217e <__fixsfsi>
    1bf2:	eb 01       	movw	r28, r22
    1bf4:	08 c0       	rjmp	.+16     	; 0x1c06 <main+0xf6>
		}
		else
		{
			smaller_distance = distances[0];	
    1bf6:	f8 01       	movw	r30, r16
    1bf8:	60 81       	ld	r22, Z
    1bfa:	71 81       	ldd	r23, Z+1	; 0x01
    1bfc:	82 81       	ldd	r24, Z+2	; 0x02
    1bfe:	93 81       	ldd	r25, Z+3	; 0x03
    1c00:	0e 94 bf 10 	call	0x217e	; 0x217e <__fixsfsi>
    1c04:	eb 01       	movw	r28, r22
		}
		
		//update load bar based on smaller distance
		LoadBar(smaller_distance);	
    1c06:	ce 01       	movw	r24, r28
    1c08:	0e 94 03 02 	call	0x406	; 0x406 <LoadBar>
		
		//update warning message based on smaller distance				
		Update_warning(smaller_distance);					
    1c0c:	ce 01       	movw	r24, r28
    1c0e:	0e 94 a0 01 	call	0x340	; 0x340 <Update_warning>
	
		distances[sensor_id]=distances[sensor_id]*(0.15009);	//convert to cm
    1c12:	c0 91 ec 01 	lds	r28, 0x01EC	; 0x8001ec <sensor_id>
    1c16:	d0 e0       	ldi	r29, 0x00	; 0
    1c18:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <sensor_id>
    1c1c:	f0 e0       	ldi	r31, 0x00	; 0
    1c1e:	ee 0f       	add	r30, r30
    1c20:	ff 1f       	adc	r31, r31
    1c22:	ee 0f       	add	r30, r30
    1c24:	ff 1f       	adc	r31, r31
    1c26:	ec 51       	subi	r30, 0x1C	; 28
    1c28:	fe 4f       	sbci	r31, 0xFE	; 254
    1c2a:	60 81       	ld	r22, Z
    1c2c:	71 81       	ldd	r23, Z+1	; 0x01
    1c2e:	82 81       	ldd	r24, Z+2	; 0x02
    1c30:	93 81       	ldd	r25, Z+3	; 0x03
    1c32:	21 e3       	ldi	r18, 0x31	; 49
    1c34:	31 eb       	ldi	r19, 0xB1	; 177
    1c36:	49 e1       	ldi	r20, 0x19	; 25
    1c38:	5e e3       	ldi	r21, 0x3E	; 62
    1c3a:	0e 94 6f 11 	call	0x22de	; 0x22de <__mulsf3>
    1c3e:	cc 0f       	add	r28, r28
    1c40:	dd 1f       	adc	r29, r29
    1c42:	cc 0f       	add	r28, r28
    1c44:	dd 1f       	adc	r29, r29
    1c46:	cc 51       	subi	r28, 0x1C	; 28
    1c48:	de 4f       	sbci	r29, 0xFE	; 254
    1c4a:	68 83       	st	Y, r22
    1c4c:	79 83       	std	Y+1, r23	; 0x01
    1c4e:	8a 83       	std	Y+2, r24	; 0x02
    1c50:	9b 83       	std	Y+3, r25	; 0x03
		
		itoa(distances[sensor_id], lcd_string, 10);				// Convert decimal value to string
    1c52:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <sensor_id>
    1c56:	f0 e0       	ldi	r31, 0x00	; 0
    1c58:	ee 0f       	add	r30, r30
    1c5a:	ff 1f       	adc	r31, r31
    1c5c:	ee 0f       	add	r30, r30
    1c5e:	ff 1f       	adc	r31, r31
    1c60:	ec 51       	subi	r30, 0x1C	; 28
    1c62:	fe 4f       	sbci	r31, 0xFE	; 254
    1c64:	60 81       	ld	r22, Z
    1c66:	71 81       	ldd	r23, Z+1	; 0x01
    1c68:	82 81       	ldd	r24, Z+2	; 0x02
    1c6a:	93 81       	ldd	r25, Z+3	; 0x03
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    1c6c:	0e 94 bf 10 	call	0x217e	; 0x217e <__fixsfsi>
    1c70:	dc 01       	movw	r26, r24
    1c72:	cb 01       	movw	r24, r22
    1c74:	4a e0       	ldi	r20, 0x0A	; 10
    1c76:	62 e3       	ldi	r22, 0x32	; 50
    1c78:	72 e0       	ldi	r23, 0x02	; 2
    1c7a:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__itoa_ncheck>
		
		//display distance on lcd
		Display_dist(sensor_id,distances,lcd_string);
    1c7e:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <sensor_id>
    1c82:	42 e3       	ldi	r20, 0x32	; 50
    1c84:	52 e0       	ldi	r21, 0x02	; 2
    1c86:	b8 01       	movw	r22, r16
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	0e 94 46 01 	call	0x28c	; 0x28c <Display_dist>
		

		
		
		//interesting info to uart
		if (distances[0]<100 && distances[1]<100)
    1c8e:	f8 01       	movw	r30, r16
    1c90:	60 81       	ld	r22, Z
    1c92:	71 81       	ldd	r23, Z+1	; 0x01
    1c94:	82 81       	ldd	r24, Z+2	; 0x02
    1c96:	93 81       	ldd	r25, Z+3	; 0x03
    1c98:	20 e0       	ldi	r18, 0x00	; 0
    1c9a:	30 e0       	ldi	r19, 0x00	; 0
    1c9c:	48 ec       	ldi	r20, 0xC8	; 200
    1c9e:	52 e4       	ldi	r21, 0x42	; 66
    1ca0:	0e 94 ba 10 	call	0x2174	; 0x2174 <__cmpsf2>
    1ca4:	88 23       	and	r24, r24
    1ca6:	94 f4       	brge	.+36     	; 0x1ccc <main+0x1bc>
    1ca8:	f8 01       	movw	r30, r16
    1caa:	64 81       	ldd	r22, Z+4	; 0x04
    1cac:	75 81       	ldd	r23, Z+5	; 0x05
    1cae:	86 81       	ldd	r24, Z+6	; 0x06
    1cb0:	97 81       	ldd	r25, Z+7	; 0x07
    1cb2:	20 e0       	ldi	r18, 0x00	; 0
    1cb4:	30 e0       	ldi	r19, 0x00	; 0
    1cb6:	48 ec       	ldi	r20, 0xC8	; 200
    1cb8:	52 e4       	ldi	r21, 0x42	; 66
    1cba:	0e 94 ba 10 	call	0x2174	; 0x2174 <__cmpsf2>
    1cbe:	88 23       	and	r24, r24
    1cc0:	2c f4       	brge	.+10     	; 0x1ccc <main+0x1bc>
		{
			uart_puts("Obstacles in front and back!\n");
    1cc2:	8a e8       	ldi	r24, 0x8A	; 138
    1cc4:	91 e0       	ldi	r25, 0x01	; 1
    1cc6:	0e 94 3e 10 	call	0x207c	; 0x207c <uart_puts>
    1cca:	28 c0       	rjmp	.+80     	; 0x1d1c <main+0x20c>
		}
		else if (distances[0]<100)
    1ccc:	f8 01       	movw	r30, r16
    1cce:	60 81       	ld	r22, Z
    1cd0:	71 81       	ldd	r23, Z+1	; 0x01
    1cd2:	82 81       	ldd	r24, Z+2	; 0x02
    1cd4:	93 81       	ldd	r25, Z+3	; 0x03
    1cd6:	20 e0       	ldi	r18, 0x00	; 0
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	48 ec       	ldi	r20, 0xC8	; 200
    1cdc:	52 e4       	ldi	r21, 0x42	; 66
    1cde:	0e 94 ba 10 	call	0x2174	; 0x2174 <__cmpsf2>
    1ce2:	88 23       	and	r24, r24
    1ce4:	2c f4       	brge	.+10     	; 0x1cf0 <main+0x1e0>
		{
			uart_puts("Obstacle in front!\n");
    1ce6:	88 ea       	ldi	r24, 0xA8	; 168
    1ce8:	91 e0       	ldi	r25, 0x01	; 1
    1cea:	0e 94 3e 10 	call	0x207c	; 0x207c <uart_puts>
    1cee:	16 c0       	rjmp	.+44     	; 0x1d1c <main+0x20c>
		}
		else if (distances[1]<100)
    1cf0:	f8 01       	movw	r30, r16
    1cf2:	64 81       	ldd	r22, Z+4	; 0x04
    1cf4:	75 81       	ldd	r23, Z+5	; 0x05
    1cf6:	86 81       	ldd	r24, Z+6	; 0x06
    1cf8:	97 81       	ldd	r25, Z+7	; 0x07
    1cfa:	20 e0       	ldi	r18, 0x00	; 0
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	48 ec       	ldi	r20, 0xC8	; 200
    1d00:	52 e4       	ldi	r21, 0x42	; 66
    1d02:	0e 94 ba 10 	call	0x2174	; 0x2174 <__cmpsf2>
    1d06:	88 23       	and	r24, r24
    1d08:	2c f4       	brge	.+10     	; 0x1d14 <main+0x204>
		{
			uart_puts("Obstacle in back!\n");
    1d0a:	8c eb       	ldi	r24, 0xBC	; 188
    1d0c:	91 e0       	ldi	r25, 0x01	; 1
    1d0e:	0e 94 3e 10 	call	0x207c	; 0x207c <uart_puts>
    1d12:	04 c0       	rjmp	.+8      	; 0x1d1c <main+0x20c>
		}
		else
		{
			uart_puts("No obstacle nearby!\n");
    1d14:	8f ec       	ldi	r24, 0xCF	; 207
    1d16:	91 e0       	ldi	r25, 0x01	; 1
    1d18:	0e 94 3e 10 	call	0x207c	; 0x207c <uart_puts>
		}	
		
		//change sensor id for next loop
		if (sensor_id==0)
    1d1c:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <sensor_id>
    1d20:	81 11       	cpse	r24, r1
    1d22:	03 c0       	rjmp	.+6      	; 0x1d2a <main+0x21a>
		{
			sensor_id=1;
    1d24:	f0 92 ec 01 	sts	0x01EC, r15	; 0x8001ec <sensor_id>
    1d28:	16 cf       	rjmp	.-468    	; 0x1b56 <main+0x46>
		}
		else
		{
			sensor_id=0;
    1d2a:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <sensor_id>
    1d2e:	13 cf       	rjmp	.-474    	; 0x1b56 <main+0x46>

00001d30 <__vector_2>:
					
    	
}

//interrupt iterates as long as echo signal from front sensor is 1
ISR(INT1_vect){
    1d30:	1f 92       	push	r1
    1d32:	0f 92       	push	r0
    1d34:	0f b6       	in	r0, 0x3f	; 63
    1d36:	0f 92       	push	r0
    1d38:	11 24       	eor	r1, r1
    1d3a:	2f 93       	push	r18
    1d3c:	3f 93       	push	r19
    1d3e:	4f 93       	push	r20
    1d40:	5f 93       	push	r21
    1d42:	6f 93       	push	r22
    1d44:	7f 93       	push	r23
    1d46:	8f 93       	push	r24
    1d48:	9f 93       	push	r25
    1d4a:	af 93       	push	r26
    1d4c:	bf 93       	push	r27
    1d4e:	cf 93       	push	r28
    1d50:	df 93       	push	r29
    1d52:	ef 93       	push	r30
    1d54:	ff 93       	push	r31
	do
	{
		distances[0]++;						//keep counting
    1d56:	c4 ee       	ldi	r28, 0xE4	; 228
    1d58:	d1 e0       	ldi	r29, 0x01	; 1
    1d5a:	68 81       	ld	r22, Y
    1d5c:	79 81       	ldd	r23, Y+1	; 0x01
    1d5e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d60:	9b 81       	ldd	r25, Y+3	; 0x03
    1d62:	20 e0       	ldi	r18, 0x00	; 0
    1d64:	30 e0       	ldi	r19, 0x00	; 0
    1d66:	40 e8       	ldi	r20, 0x80	; 128
    1d68:	5f e3       	ldi	r21, 0x3F	; 63
    1d6a:	0e 94 4e 10 	call	0x209c	; 0x209c <__addsf3>
    1d6e:	68 83       	st	Y, r22
    1d70:	79 83       	std	Y+1, r23	; 0x01
    1d72:	8a 83       	std	Y+2, r24	; 0x02
    1d74:	9b 83       	std	Y+3, r25	; 0x03
	} while (GPIO_read(&PIND,Front_Echo));	//until echo is 0
    1d76:	63 e0       	ldi	r22, 0x03	; 3
    1d78:	89 e2       	ldi	r24, 0x29	; 41
    1d7a:	90 e0       	ldi	r25, 0x00	; 0
    1d7c:	0e 94 95 00 	call	0x12a	; 0x12a <GPIO_read>
    1d80:	81 11       	cpse	r24, r1
    1d82:	eb cf       	rjmp	.-42     	; 0x1d5a <__vector_2+0x2a>
	trigger_enable=1;						//enable trigger
    1d84:	81 e0       	ldi	r24, 0x01	; 1
    1d86:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
}
    1d8a:	ff 91       	pop	r31
    1d8c:	ef 91       	pop	r30
    1d8e:	df 91       	pop	r29
    1d90:	cf 91       	pop	r28
    1d92:	bf 91       	pop	r27
    1d94:	af 91       	pop	r26
    1d96:	9f 91       	pop	r25
    1d98:	8f 91       	pop	r24
    1d9a:	7f 91       	pop	r23
    1d9c:	6f 91       	pop	r22
    1d9e:	5f 91       	pop	r21
    1da0:	4f 91       	pop	r20
    1da2:	3f 91       	pop	r19
    1da4:	2f 91       	pop	r18
    1da6:	0f 90       	pop	r0
    1da8:	0f be       	out	0x3f, r0	; 63
    1daa:	0f 90       	pop	r0
    1dac:	1f 90       	pop	r1
    1dae:	18 95       	reti

00001db0 <__vector_1>:

//interrupt iterates as long as echo signal from back sensor is 1
ISR(INT0_vect){
    1db0:	1f 92       	push	r1
    1db2:	0f 92       	push	r0
    1db4:	0f b6       	in	r0, 0x3f	; 63
    1db6:	0f 92       	push	r0
    1db8:	11 24       	eor	r1, r1
    1dba:	2f 93       	push	r18
    1dbc:	3f 93       	push	r19
    1dbe:	4f 93       	push	r20
    1dc0:	5f 93       	push	r21
    1dc2:	6f 93       	push	r22
    1dc4:	7f 93       	push	r23
    1dc6:	8f 93       	push	r24
    1dc8:	9f 93       	push	r25
    1dca:	af 93       	push	r26
    1dcc:	bf 93       	push	r27
    1dce:	cf 93       	push	r28
    1dd0:	df 93       	push	r29
    1dd2:	ef 93       	push	r30
    1dd4:	ff 93       	push	r31
	do
	{
		distances[1]++;						//keep counting
    1dd6:	c4 ee       	ldi	r28, 0xE4	; 228
    1dd8:	d1 e0       	ldi	r29, 0x01	; 1
    1dda:	6c 81       	ldd	r22, Y+4	; 0x04
    1ddc:	7d 81       	ldd	r23, Y+5	; 0x05
    1dde:	8e 81       	ldd	r24, Y+6	; 0x06
    1de0:	9f 81       	ldd	r25, Y+7	; 0x07
    1de2:	20 e0       	ldi	r18, 0x00	; 0
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	40 e8       	ldi	r20, 0x80	; 128
    1de8:	5f e3       	ldi	r21, 0x3F	; 63
    1dea:	0e 94 4e 10 	call	0x209c	; 0x209c <__addsf3>
    1dee:	6c 83       	std	Y+4, r22	; 0x04
    1df0:	7d 83       	std	Y+5, r23	; 0x05
    1df2:	8e 83       	std	Y+6, r24	; 0x06
    1df4:	9f 83       	std	Y+7, r25	; 0x07
	} while (GPIO_read(&PIND,Back_Echo));	//until echo is 0
    1df6:	62 e0       	ldi	r22, 0x02	; 2
    1df8:	89 e2       	ldi	r24, 0x29	; 41
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	0e 94 95 00 	call	0x12a	; 0x12a <GPIO_read>
    1e00:	81 11       	cpse	r24, r1
    1e02:	eb cf       	rjmp	.-42     	; 0x1dda <__vector_1+0x2a>
	trigger_enable=1;						//enable trigger
    1e04:	81 e0       	ldi	r24, 0x01	; 1
    1e06:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
}
    1e0a:	ff 91       	pop	r31
    1e0c:	ef 91       	pop	r30
    1e0e:	df 91       	pop	r29
    1e10:	cf 91       	pop	r28
    1e12:	bf 91       	pop	r27
    1e14:	af 91       	pop	r26
    1e16:	9f 91       	pop	r25
    1e18:	8f 91       	pop	r24
    1e1a:	7f 91       	pop	r23
    1e1c:	6f 91       	pop	r22
    1e1e:	5f 91       	pop	r21
    1e20:	4f 91       	pop	r20
    1e22:	3f 91       	pop	r19
    1e24:	2f 91       	pop	r18
    1e26:	0f 90       	pop	r0
    1e28:	0f be       	out	0x3f, r0	; 63
    1e2a:	0f 90       	pop	r0
    1e2c:	1f 90       	pop	r1
    1e2e:	18 95       	reti

00001e30 <__vector_9>:


ISR(TIMER2_OVF_vect)
{
    1e30:	1f 92       	push	r1
    1e32:	0f 92       	push	r0
    1e34:	0f b6       	in	r0, 0x3f	; 63
    1e36:	0f 92       	push	r0
    1e38:	11 24       	eor	r1, r1
    1e3a:	2f 93       	push	r18
    1e3c:	3f 93       	push	r19
    1e3e:	4f 93       	push	r20
    1e40:	5f 93       	push	r21
    1e42:	6f 93       	push	r22
    1e44:	7f 93       	push	r23
    1e46:	8f 93       	push	r24
    1e48:	9f 93       	push	r25
    1e4a:	af 93       	push	r26
    1e4c:	bf 93       	push	r27
    1e4e:	ef 93       	push	r30
    1e50:	ff 93       	push	r31
	int freq = 50;  //for saving closer distance
	
	//choose the smaller distance
	if(distances[0] > distances[1])
    1e52:	e4 ee       	ldi	r30, 0xE4	; 228
    1e54:	f1 e0       	ldi	r31, 0x01	; 1
    1e56:	60 81       	ld	r22, Z
    1e58:	71 81       	ldd	r23, Z+1	; 0x01
    1e5a:	82 81       	ldd	r24, Z+2	; 0x02
    1e5c:	93 81       	ldd	r25, Z+3	; 0x03
    1e5e:	24 81       	ldd	r18, Z+4	; 0x04
    1e60:	35 81       	ldd	r19, Z+5	; 0x05
    1e62:	46 81       	ldd	r20, Z+6	; 0x06
    1e64:	57 81       	ldd	r21, Z+7	; 0x07
    1e66:	0e 94 6a 11 	call	0x22d4	; 0x22d4 <__gesf2>
    1e6a:	18 16       	cp	r1, r24
    1e6c:	5c f4       	brge	.+22     	; 0x1e84 <__vector_9+0x54>
	{
		freq = distances[1];
    1e6e:	60 91 e8 01 	lds	r22, 0x01E8	; 0x8001e8 <__data_end+0x4>
    1e72:	70 91 e9 01 	lds	r23, 0x01E9	; 0x8001e9 <__data_end+0x5>
    1e76:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <__data_end+0x6>
    1e7a:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <__data_end+0x7>
    1e7e:	0e 94 bf 10 	call	0x217e	; 0x217e <__fixsfsi>
    1e82:	0a c0       	rjmp	.+20     	; 0x1e98 <__vector_9+0x68>
	}
	else
	{
		freq = distances[0];
    1e84:	60 91 e4 01 	lds	r22, 0x01E4	; 0x8001e4 <__data_end>
    1e88:	70 91 e5 01 	lds	r23, 0x01E5	; 0x8001e5 <__data_end+0x1>
    1e8c:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <__data_end+0x2>
    1e90:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <__data_end+0x3>
    1e94:	0e 94 bf 10 	call	0x217e	; 0x217e <__fixsfsi>
	}
	
	//select frequency of signal led based on smaller distance
	if (freq <= 50 && freq > 40)
    1e98:	cb 01       	movw	r24, r22
    1e9a:	9b 01       	movw	r18, r22
    1e9c:	29 52       	subi	r18, 0x29	; 41
    1e9e:	31 09       	sbc	r19, r1
    1ea0:	2a 30       	cpi	r18, 0x0A	; 10
    1ea2:	31 05       	cpc	r19, r1
    1ea4:	58 f4       	brcc	.+22     	; 0x1ebc <__vector_9+0x8c>
	{
		TIM2_overflow_16ms();				
    1ea6:	e1 eb       	ldi	r30, 0xB1	; 177
    1ea8:	f0 e0       	ldi	r31, 0x00	; 0
    1eaa:	80 81       	ld	r24, Z
    1eac:	87 60       	ori	r24, 0x07	; 7
    1eae:	80 83       	st	Z, r24
		GPIO_toggle(&PORTB, alarm);								
    1eb0:	64 e0       	ldi	r22, 0x04	; 4
    1eb2:	85 e2       	ldi	r24, 0x25	; 37
    1eb4:	90 e0       	ldi	r25, 0x00	; 0
    1eb6:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
    1eba:	49 c0       	rjmp	.+146    	; 0x1f4e <__vector_9+0x11e>
	}
	else if (freq <= 40 && freq > 30)
    1ebc:	9b 01       	movw	r18, r22
    1ebe:	2f 51       	subi	r18, 0x1F	; 31
    1ec0:	31 09       	sbc	r19, r1
    1ec2:	2a 30       	cpi	r18, 0x0A	; 10
    1ec4:	31 05       	cpc	r19, r1
    1ec6:	70 f4       	brcc	.+28     	; 0x1ee4 <__vector_9+0xb4>
	{
		TIM2_overflow_4ms();					
    1ec8:	e1 eb       	ldi	r30, 0xB1	; 177
    1eca:	f0 e0       	ldi	r31, 0x00	; 0
    1ecc:	80 81       	ld	r24, Z
    1ece:	8e 7f       	andi	r24, 0xFE	; 254
    1ed0:	80 83       	st	Z, r24
    1ed2:	80 81       	ld	r24, Z
    1ed4:	86 60       	ori	r24, 0x06	; 6
    1ed6:	80 83       	st	Z, r24
		GPIO_toggle(&PORTB, alarm);				
    1ed8:	64 e0       	ldi	r22, 0x04	; 4
    1eda:	85 e2       	ldi	r24, 0x25	; 37
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
    1ee2:	35 c0       	rjmp	.+106    	; 0x1f4e <__vector_9+0x11e>
	}
	else if (freq <= 30 && freq > 20)
    1ee4:	9b 01       	movw	r18, r22
    1ee6:	25 51       	subi	r18, 0x15	; 21
    1ee8:	31 09       	sbc	r19, r1
    1eea:	2a 30       	cpi	r18, 0x0A	; 10
    1eec:	31 05       	cpc	r19, r1
    1eee:	70 f4       	brcc	.+28     	; 0x1f0c <__vector_9+0xdc>
	{
		TIM2_overflow_2ms();					
    1ef0:	e1 eb       	ldi	r30, 0xB1	; 177
    1ef2:	f0 e0       	ldi	r31, 0x00	; 0
    1ef4:	80 81       	ld	r24, Z
    1ef6:	8d 7f       	andi	r24, 0xFD	; 253
    1ef8:	80 83       	st	Z, r24
    1efa:	80 81       	ld	r24, Z
    1efc:	85 60       	ori	r24, 0x05	; 5
    1efe:	80 83       	st	Z, r24
		GPIO_toggle(&PORTB, alarm);				
    1f00:	64 e0       	ldi	r22, 0x04	; 4
    1f02:	85 e2       	ldi	r24, 0x25	; 37
    1f04:	90 e0       	ldi	r25, 0x00	; 0
    1f06:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
    1f0a:	21 c0       	rjmp	.+66     	; 0x1f4e <__vector_9+0x11e>
	}
	else if (freq <= 20 && freq > 10)
    1f0c:	0b 97       	sbiw	r24, 0x0b	; 11
    1f0e:	0a 97       	sbiw	r24, 0x0a	; 10
    1f10:	70 f4       	brcc	.+28     	; 0x1f2e <__vector_9+0xfe>
	{
		TIM2_overflow_1ms();					
    1f12:	e1 eb       	ldi	r30, 0xB1	; 177
    1f14:	f0 e0       	ldi	r31, 0x00	; 0
    1f16:	80 81       	ld	r24, Z
    1f18:	8c 7f       	andi	r24, 0xFC	; 252
    1f1a:	80 83       	st	Z, r24
    1f1c:	80 81       	ld	r24, Z
    1f1e:	84 60       	ori	r24, 0x04	; 4
    1f20:	80 83       	st	Z, r24
		GPIO_toggle(&PORTB, alarm);				
    1f22:	64 e0       	ldi	r22, 0x04	; 4
    1f24:	85 e2       	ldi	r24, 0x25	; 37
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
    1f2c:	10 c0       	rjmp	.+32     	; 0x1f4e <__vector_9+0x11e>
	}
	else if (freq <= 10)
    1f2e:	6b 30       	cpi	r22, 0x0B	; 11
    1f30:	71 05       	cpc	r23, r1
    1f32:	6c f4       	brge	.+26     	; 0x1f4e <__vector_9+0x11e>
	{
		TIM2_overflow_512us();					
    1f34:	e1 eb       	ldi	r30, 0xB1	; 177
    1f36:	f0 e0       	ldi	r31, 0x00	; 0
    1f38:	80 81       	ld	r24, Z
    1f3a:	8b 7f       	andi	r24, 0xFB	; 251
    1f3c:	80 83       	st	Z, r24
    1f3e:	80 81       	ld	r24, Z
    1f40:	83 60       	ori	r24, 0x03	; 3
    1f42:	80 83       	st	Z, r24
		GPIO_toggle(&PORTB, alarm);				
    1f44:	64 e0       	ldi	r22, 0x04	; 4
    1f46:	85 e2       	ldi	r24, 0x25	; 37
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
	}
}
    1f4e:	ff 91       	pop	r31
    1f50:	ef 91       	pop	r30
    1f52:	bf 91       	pop	r27
    1f54:	af 91       	pop	r26
    1f56:	9f 91       	pop	r25
    1f58:	8f 91       	pop	r24
    1f5a:	7f 91       	pop	r23
    1f5c:	6f 91       	pop	r22
    1f5e:	5f 91       	pop	r21
    1f60:	4f 91       	pop	r20
    1f62:	3f 91       	pop	r19
    1f64:	2f 91       	pop	r18
    1f66:	0f 90       	pop	r0
    1f68:	0f be       	out	0x3f, r0	; 63
    1f6a:	0f 90       	pop	r0
    1f6c:	1f 90       	pop	r1
    1f6e:	18 95       	reti

00001f70 <__vector_18>:
    /* store buffer index */
    UART_RxTail = tmptail;

    UART_LastRxError = 0;
    return (lastRxError << 8) + data;
}/* uart_getc */
    1f70:	1f 92       	push	r1
    1f72:	0f 92       	push	r0
    1f74:	0f b6       	in	r0, 0x3f	; 63
    1f76:	0f 92       	push	r0
    1f78:	11 24       	eor	r1, r1
    1f7a:	2f 93       	push	r18
    1f7c:	8f 93       	push	r24
    1f7e:	9f 93       	push	r25
    1f80:	ef 93       	push	r30
    1f82:	ff 93       	push	r31
    1f84:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    1f88:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    1f8c:	8c 71       	andi	r24, 0x1C	; 28
    1f8e:	e0 91 ef 01 	lds	r30, 0x01EF	; 0x8001ef <UART_RxHead>
    1f92:	ef 5f       	subi	r30, 0xFF	; 255
    1f94:	ef 71       	andi	r30, 0x1F	; 31
    1f96:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <UART_RxTail>
    1f9a:	e9 17       	cp	r30, r25
    1f9c:	39 f0       	breq	.+14     	; 0x1fac <__vector_18+0x3c>
    1f9e:	e0 93 ef 01 	sts	0x01EF, r30	; 0x8001ef <UART_RxHead>
    1fa2:	f0 e0       	ldi	r31, 0x00	; 0
    1fa4:	ee 50       	subi	r30, 0x0E	; 14
    1fa6:	fe 4f       	sbci	r31, 0xFE	; 254
    1fa8:	20 83       	st	Z, r18
    1faa:	01 c0       	rjmp	.+2      	; 0x1fae <__vector_18+0x3e>
    1fac:	82 e0       	ldi	r24, 0x02	; 2
    1fae:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <UART_LastRxError>
    1fb2:	89 2b       	or	r24, r25
    1fb4:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <UART_LastRxError>
    1fb8:	ff 91       	pop	r31
    1fba:	ef 91       	pop	r30
    1fbc:	9f 91       	pop	r25
    1fbe:	8f 91       	pop	r24
    1fc0:	2f 91       	pop	r18
    1fc2:	0f 90       	pop	r0
    1fc4:	0f be       	out	0x3f, r0	; 63
    1fc6:	0f 90       	pop	r0
    1fc8:	1f 90       	pop	r1
    1fca:	18 95       	reti

00001fcc <__vector_19>:
    1fcc:	1f 92       	push	r1
    1fce:	0f 92       	push	r0
    1fd0:	0f b6       	in	r0, 0x3f	; 63
    1fd2:	0f 92       	push	r0
    1fd4:	11 24       	eor	r1, r1
    1fd6:	8f 93       	push	r24
    1fd8:	9f 93       	push	r25
    1fda:	ef 93       	push	r30
    1fdc:	ff 93       	push	r31
    1fde:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <UART_TxHead>
    1fe2:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <UART_TxTail>
    1fe6:	98 17       	cp	r25, r24
    1fe8:	69 f0       	breq	.+26     	; 0x2004 <__vector_19+0x38>
    1fea:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <UART_TxTail>
    1fee:	ef 5f       	subi	r30, 0xFF	; 255
    1ff0:	ef 71       	andi	r30, 0x1F	; 31
    1ff2:	e0 93 f0 01 	sts	0x01F0, r30	; 0x8001f0 <UART_TxTail>
    1ff6:	f0 e0       	ldi	r31, 0x00	; 0
    1ff8:	ee 5e       	subi	r30, 0xEE	; 238
    1ffa:	fd 4f       	sbci	r31, 0xFD	; 253
    1ffc:	80 81       	ld	r24, Z
    1ffe:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    2002:	05 c0       	rjmp	.+10     	; 0x200e <__vector_19+0x42>
    2004:	e1 ec       	ldi	r30, 0xC1	; 193
    2006:	f0 e0       	ldi	r31, 0x00	; 0
    2008:	80 81       	ld	r24, Z
    200a:	8f 7d       	andi	r24, 0xDF	; 223
    200c:	80 83       	st	Z, r24
    200e:	ff 91       	pop	r31
    2010:	ef 91       	pop	r30
    2012:	9f 91       	pop	r25
    2014:	8f 91       	pop	r24
    2016:	0f 90       	pop	r0
    2018:	0f be       	out	0x3f, r0	; 63
    201a:	0f 90       	pop	r0
    201c:	1f 90       	pop	r1
    201e:	18 95       	reti

00002020 <uart_init>:
    2020:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <UART_TxHead>
    2024:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <UART_TxTail>
    2028:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <UART_RxHead>
    202c:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <UART_RxTail>
    2030:	99 23       	and	r25, r25
    2032:	1c f4       	brge	.+6      	; 0x203a <uart_init+0x1a>
    2034:	22 e0       	ldi	r18, 0x02	; 2
    2036:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    203a:	90 78       	andi	r25, 0x80	; 128
    203c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    2040:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    2044:	88 e9       	ldi	r24, 0x98	; 152
    2046:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    204a:	86 e0       	ldi	r24, 0x06	; 6
    204c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
    2050:	08 95       	ret

00002052 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;


    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
    2052:	20 91 f1 01 	lds	r18, 0x01F1	; 0x8001f1 <UART_TxHead>
    2056:	2f 5f       	subi	r18, 0xFF	; 255
    2058:	2f 71       	andi	r18, 0x1F	; 31

    while (tmphead == UART_TxTail)
    205a:	90 91 f0 01 	lds	r25, 0x01F0	; 0x8001f0 <UART_TxTail>
    205e:	29 17       	cp	r18, r25
    2060:	e1 f3       	breq	.-8      	; 0x205a <uart_putc+0x8>
    {
        ;/* wait for free space in buffer */
    }

    UART_TxBuf[tmphead] = data;
    2062:	e2 2f       	mov	r30, r18
    2064:	f0 e0       	ldi	r31, 0x00	; 0
    2066:	ee 5e       	subi	r30, 0xEE	; 238
    2068:	fd 4f       	sbci	r31, 0xFD	; 253
    206a:	80 83       	st	Z, r24
    UART_TxHead         = tmphead;
    206c:	20 93 f1 01 	sts	0x01F1, r18	; 0x8001f1 <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL |= _BV(UART0_UDRIE);
    2070:	e1 ec       	ldi	r30, 0xC1	; 193
    2072:	f0 e0       	ldi	r31, 0x00	; 0
    2074:	80 81       	ld	r24, Z
    2076:	80 62       	ori	r24, 0x20	; 32
    2078:	80 83       	st	Z, r24
    207a:	08 95       	ret

0000207c <uart_puts>:
 * Purpose:  transmit string to UART
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
    207c:	cf 93       	push	r28
    207e:	df 93       	push	r29
    2080:	ec 01       	movw	r28, r24
    while (*s)
    2082:	88 81       	ld	r24, Y
    2084:	88 23       	and	r24, r24
    2086:	31 f0       	breq	.+12     	; 0x2094 <uart_puts+0x18>
    2088:	21 96       	adiw	r28, 0x01	; 1
        uart_putc(*s++);
    208a:	0e 94 29 10 	call	0x2052	; 0x2052 <uart_putc>
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
    while (*s)
    208e:	89 91       	ld	r24, Y+
    2090:	81 11       	cpse	r24, r1
    2092:	fb cf       	rjmp	.-10     	; 0x208a <uart_puts+0xe>
        uart_putc(*s++);
}/* uart_puts */
    2094:	df 91       	pop	r29
    2096:	cf 91       	pop	r28
    2098:	08 95       	ret

0000209a <__subsf3>:
    209a:	50 58       	subi	r21, 0x80	; 128

0000209c <__addsf3>:
    209c:	bb 27       	eor	r27, r27
    209e:	aa 27       	eor	r26, r26
    20a0:	0e 94 65 10 	call	0x20ca	; 0x20ca <__addsf3x>
    20a4:	0c 94 30 11 	jmp	0x2260	; 0x2260 <__fp_round>
    20a8:	0e 94 22 11 	call	0x2244	; 0x2244 <__fp_pscA>
    20ac:	38 f0       	brcs	.+14     	; 0x20bc <__addsf3+0x20>
    20ae:	0e 94 29 11 	call	0x2252	; 0x2252 <__fp_pscB>
    20b2:	20 f0       	brcs	.+8      	; 0x20bc <__addsf3+0x20>
    20b4:	39 f4       	brne	.+14     	; 0x20c4 <__addsf3+0x28>
    20b6:	9f 3f       	cpi	r25, 0xFF	; 255
    20b8:	19 f4       	brne	.+6      	; 0x20c0 <__addsf3+0x24>
    20ba:	26 f4       	brtc	.+8      	; 0x20c4 <__addsf3+0x28>
    20bc:	0c 94 1f 11 	jmp	0x223e	; 0x223e <__fp_nan>
    20c0:	0e f4       	brtc	.+2      	; 0x20c4 <__addsf3+0x28>
    20c2:	e0 95       	com	r30
    20c4:	e7 fb       	bst	r30, 7
    20c6:	0c 94 19 11 	jmp	0x2232	; 0x2232 <__fp_inf>

000020ca <__addsf3x>:
    20ca:	e9 2f       	mov	r30, r25
    20cc:	0e 94 41 11 	call	0x2282	; 0x2282 <__fp_split3>
    20d0:	58 f3       	brcs	.-42     	; 0x20a8 <__addsf3+0xc>
    20d2:	ba 17       	cp	r27, r26
    20d4:	62 07       	cpc	r22, r18
    20d6:	73 07       	cpc	r23, r19
    20d8:	84 07       	cpc	r24, r20
    20da:	95 07       	cpc	r25, r21
    20dc:	20 f0       	brcs	.+8      	; 0x20e6 <__addsf3x+0x1c>
    20de:	79 f4       	brne	.+30     	; 0x20fe <__addsf3x+0x34>
    20e0:	a6 f5       	brtc	.+104    	; 0x214a <__addsf3x+0x80>
    20e2:	0c 94 63 11 	jmp	0x22c6	; 0x22c6 <__fp_zero>
    20e6:	0e f4       	brtc	.+2      	; 0x20ea <__addsf3x+0x20>
    20e8:	e0 95       	com	r30
    20ea:	0b 2e       	mov	r0, r27
    20ec:	ba 2f       	mov	r27, r26
    20ee:	a0 2d       	mov	r26, r0
    20f0:	0b 01       	movw	r0, r22
    20f2:	b9 01       	movw	r22, r18
    20f4:	90 01       	movw	r18, r0
    20f6:	0c 01       	movw	r0, r24
    20f8:	ca 01       	movw	r24, r20
    20fa:	a0 01       	movw	r20, r0
    20fc:	11 24       	eor	r1, r1
    20fe:	ff 27       	eor	r31, r31
    2100:	59 1b       	sub	r21, r25
    2102:	99 f0       	breq	.+38     	; 0x212a <__addsf3x+0x60>
    2104:	59 3f       	cpi	r21, 0xF9	; 249
    2106:	50 f4       	brcc	.+20     	; 0x211c <__addsf3x+0x52>
    2108:	50 3e       	cpi	r21, 0xE0	; 224
    210a:	68 f1       	brcs	.+90     	; 0x2166 <__addsf3x+0x9c>
    210c:	1a 16       	cp	r1, r26
    210e:	f0 40       	sbci	r31, 0x00	; 0
    2110:	a2 2f       	mov	r26, r18
    2112:	23 2f       	mov	r18, r19
    2114:	34 2f       	mov	r19, r20
    2116:	44 27       	eor	r20, r20
    2118:	58 5f       	subi	r21, 0xF8	; 248
    211a:	f3 cf       	rjmp	.-26     	; 0x2102 <__addsf3x+0x38>
    211c:	46 95       	lsr	r20
    211e:	37 95       	ror	r19
    2120:	27 95       	ror	r18
    2122:	a7 95       	ror	r26
    2124:	f0 40       	sbci	r31, 0x00	; 0
    2126:	53 95       	inc	r21
    2128:	c9 f7       	brne	.-14     	; 0x211c <__addsf3x+0x52>
    212a:	7e f4       	brtc	.+30     	; 0x214a <__addsf3x+0x80>
    212c:	1f 16       	cp	r1, r31
    212e:	ba 0b       	sbc	r27, r26
    2130:	62 0b       	sbc	r22, r18
    2132:	73 0b       	sbc	r23, r19
    2134:	84 0b       	sbc	r24, r20
    2136:	ba f0       	brmi	.+46     	; 0x2166 <__addsf3x+0x9c>
    2138:	91 50       	subi	r25, 0x01	; 1
    213a:	a1 f0       	breq	.+40     	; 0x2164 <__addsf3x+0x9a>
    213c:	ff 0f       	add	r31, r31
    213e:	bb 1f       	adc	r27, r27
    2140:	66 1f       	adc	r22, r22
    2142:	77 1f       	adc	r23, r23
    2144:	88 1f       	adc	r24, r24
    2146:	c2 f7       	brpl	.-16     	; 0x2138 <__addsf3x+0x6e>
    2148:	0e c0       	rjmp	.+28     	; 0x2166 <__addsf3x+0x9c>
    214a:	ba 0f       	add	r27, r26
    214c:	62 1f       	adc	r22, r18
    214e:	73 1f       	adc	r23, r19
    2150:	84 1f       	adc	r24, r20
    2152:	48 f4       	brcc	.+18     	; 0x2166 <__addsf3x+0x9c>
    2154:	87 95       	ror	r24
    2156:	77 95       	ror	r23
    2158:	67 95       	ror	r22
    215a:	b7 95       	ror	r27
    215c:	f7 95       	ror	r31
    215e:	9e 3f       	cpi	r25, 0xFE	; 254
    2160:	08 f0       	brcs	.+2      	; 0x2164 <__addsf3x+0x9a>
    2162:	b0 cf       	rjmp	.-160    	; 0x20c4 <__addsf3+0x28>
    2164:	93 95       	inc	r25
    2166:	88 0f       	add	r24, r24
    2168:	08 f0       	brcs	.+2      	; 0x216c <__addsf3x+0xa2>
    216a:	99 27       	eor	r25, r25
    216c:	ee 0f       	add	r30, r30
    216e:	97 95       	ror	r25
    2170:	87 95       	ror	r24
    2172:	08 95       	ret

00002174 <__cmpsf2>:
    2174:	0e 94 f5 10 	call	0x21ea	; 0x21ea <__fp_cmp>
    2178:	08 f4       	brcc	.+2      	; 0x217c <__cmpsf2+0x8>
    217a:	81 e0       	ldi	r24, 0x01	; 1
    217c:	08 95       	ret

0000217e <__fixsfsi>:
    217e:	0e 94 c6 10 	call	0x218c	; 0x218c <__fixunssfsi>
    2182:	68 94       	set
    2184:	b1 11       	cpse	r27, r1
    2186:	0c 94 64 11 	jmp	0x22c8	; 0x22c8 <__fp_szero>
    218a:	08 95       	ret

0000218c <__fixunssfsi>:
    218c:	0e 94 49 11 	call	0x2292	; 0x2292 <__fp_splitA>
    2190:	88 f0       	brcs	.+34     	; 0x21b4 <__fixunssfsi+0x28>
    2192:	9f 57       	subi	r25, 0x7F	; 127
    2194:	98 f0       	brcs	.+38     	; 0x21bc <__fixunssfsi+0x30>
    2196:	b9 2f       	mov	r27, r25
    2198:	99 27       	eor	r25, r25
    219a:	b7 51       	subi	r27, 0x17	; 23
    219c:	b0 f0       	brcs	.+44     	; 0x21ca <__fixunssfsi+0x3e>
    219e:	e1 f0       	breq	.+56     	; 0x21d8 <__fixunssfsi+0x4c>
    21a0:	66 0f       	add	r22, r22
    21a2:	77 1f       	adc	r23, r23
    21a4:	88 1f       	adc	r24, r24
    21a6:	99 1f       	adc	r25, r25
    21a8:	1a f0       	brmi	.+6      	; 0x21b0 <__fixunssfsi+0x24>
    21aa:	ba 95       	dec	r27
    21ac:	c9 f7       	brne	.-14     	; 0x21a0 <__fixunssfsi+0x14>
    21ae:	14 c0       	rjmp	.+40     	; 0x21d8 <__fixunssfsi+0x4c>
    21b0:	b1 30       	cpi	r27, 0x01	; 1
    21b2:	91 f0       	breq	.+36     	; 0x21d8 <__fixunssfsi+0x4c>
    21b4:	0e 94 63 11 	call	0x22c6	; 0x22c6 <__fp_zero>
    21b8:	b1 e0       	ldi	r27, 0x01	; 1
    21ba:	08 95       	ret
    21bc:	0c 94 63 11 	jmp	0x22c6	; 0x22c6 <__fp_zero>
    21c0:	67 2f       	mov	r22, r23
    21c2:	78 2f       	mov	r23, r24
    21c4:	88 27       	eor	r24, r24
    21c6:	b8 5f       	subi	r27, 0xF8	; 248
    21c8:	39 f0       	breq	.+14     	; 0x21d8 <__fixunssfsi+0x4c>
    21ca:	b9 3f       	cpi	r27, 0xF9	; 249
    21cc:	cc f3       	brlt	.-14     	; 0x21c0 <__fixunssfsi+0x34>
    21ce:	86 95       	lsr	r24
    21d0:	77 95       	ror	r23
    21d2:	67 95       	ror	r22
    21d4:	b3 95       	inc	r27
    21d6:	d9 f7       	brne	.-10     	; 0x21ce <__fixunssfsi+0x42>
    21d8:	3e f4       	brtc	.+14     	; 0x21e8 <__fixunssfsi+0x5c>
    21da:	90 95       	com	r25
    21dc:	80 95       	com	r24
    21de:	70 95       	com	r23
    21e0:	61 95       	neg	r22
    21e2:	7f 4f       	sbci	r23, 0xFF	; 255
    21e4:	8f 4f       	sbci	r24, 0xFF	; 255
    21e6:	9f 4f       	sbci	r25, 0xFF	; 255
    21e8:	08 95       	ret

000021ea <__fp_cmp>:
    21ea:	99 0f       	add	r25, r25
    21ec:	00 08       	sbc	r0, r0
    21ee:	55 0f       	add	r21, r21
    21f0:	aa 0b       	sbc	r26, r26
    21f2:	e0 e8       	ldi	r30, 0x80	; 128
    21f4:	fe ef       	ldi	r31, 0xFE	; 254
    21f6:	16 16       	cp	r1, r22
    21f8:	17 06       	cpc	r1, r23
    21fa:	e8 07       	cpc	r30, r24
    21fc:	f9 07       	cpc	r31, r25
    21fe:	c0 f0       	brcs	.+48     	; 0x2230 <__fp_cmp+0x46>
    2200:	12 16       	cp	r1, r18
    2202:	13 06       	cpc	r1, r19
    2204:	e4 07       	cpc	r30, r20
    2206:	f5 07       	cpc	r31, r21
    2208:	98 f0       	brcs	.+38     	; 0x2230 <__fp_cmp+0x46>
    220a:	62 1b       	sub	r22, r18
    220c:	73 0b       	sbc	r23, r19
    220e:	84 0b       	sbc	r24, r20
    2210:	95 0b       	sbc	r25, r21
    2212:	39 f4       	brne	.+14     	; 0x2222 <__fp_cmp+0x38>
    2214:	0a 26       	eor	r0, r26
    2216:	61 f0       	breq	.+24     	; 0x2230 <__fp_cmp+0x46>
    2218:	23 2b       	or	r18, r19
    221a:	24 2b       	or	r18, r20
    221c:	25 2b       	or	r18, r21
    221e:	21 f4       	brne	.+8      	; 0x2228 <__fp_cmp+0x3e>
    2220:	08 95       	ret
    2222:	0a 26       	eor	r0, r26
    2224:	09 f4       	brne	.+2      	; 0x2228 <__fp_cmp+0x3e>
    2226:	a1 40       	sbci	r26, 0x01	; 1
    2228:	a6 95       	lsr	r26
    222a:	8f ef       	ldi	r24, 0xFF	; 255
    222c:	81 1d       	adc	r24, r1
    222e:	81 1d       	adc	r24, r1
    2230:	08 95       	ret

00002232 <__fp_inf>:
    2232:	97 f9       	bld	r25, 7
    2234:	9f 67       	ori	r25, 0x7F	; 127
    2236:	80 e8       	ldi	r24, 0x80	; 128
    2238:	70 e0       	ldi	r23, 0x00	; 0
    223a:	60 e0       	ldi	r22, 0x00	; 0
    223c:	08 95       	ret

0000223e <__fp_nan>:
    223e:	9f ef       	ldi	r25, 0xFF	; 255
    2240:	80 ec       	ldi	r24, 0xC0	; 192
    2242:	08 95       	ret

00002244 <__fp_pscA>:
    2244:	00 24       	eor	r0, r0
    2246:	0a 94       	dec	r0
    2248:	16 16       	cp	r1, r22
    224a:	17 06       	cpc	r1, r23
    224c:	18 06       	cpc	r1, r24
    224e:	09 06       	cpc	r0, r25
    2250:	08 95       	ret

00002252 <__fp_pscB>:
    2252:	00 24       	eor	r0, r0
    2254:	0a 94       	dec	r0
    2256:	12 16       	cp	r1, r18
    2258:	13 06       	cpc	r1, r19
    225a:	14 06       	cpc	r1, r20
    225c:	05 06       	cpc	r0, r21
    225e:	08 95       	ret

00002260 <__fp_round>:
    2260:	09 2e       	mov	r0, r25
    2262:	03 94       	inc	r0
    2264:	00 0c       	add	r0, r0
    2266:	11 f4       	brne	.+4      	; 0x226c <__fp_round+0xc>
    2268:	88 23       	and	r24, r24
    226a:	52 f0       	brmi	.+20     	; 0x2280 <__fp_round+0x20>
    226c:	bb 0f       	add	r27, r27
    226e:	40 f4       	brcc	.+16     	; 0x2280 <__fp_round+0x20>
    2270:	bf 2b       	or	r27, r31
    2272:	11 f4       	brne	.+4      	; 0x2278 <__fp_round+0x18>
    2274:	60 ff       	sbrs	r22, 0
    2276:	04 c0       	rjmp	.+8      	; 0x2280 <__fp_round+0x20>
    2278:	6f 5f       	subi	r22, 0xFF	; 255
    227a:	7f 4f       	sbci	r23, 0xFF	; 255
    227c:	8f 4f       	sbci	r24, 0xFF	; 255
    227e:	9f 4f       	sbci	r25, 0xFF	; 255
    2280:	08 95       	ret

00002282 <__fp_split3>:
    2282:	57 fd       	sbrc	r21, 7
    2284:	90 58       	subi	r25, 0x80	; 128
    2286:	44 0f       	add	r20, r20
    2288:	55 1f       	adc	r21, r21
    228a:	59 f0       	breq	.+22     	; 0x22a2 <__fp_splitA+0x10>
    228c:	5f 3f       	cpi	r21, 0xFF	; 255
    228e:	71 f0       	breq	.+28     	; 0x22ac <__fp_splitA+0x1a>
    2290:	47 95       	ror	r20

00002292 <__fp_splitA>:
    2292:	88 0f       	add	r24, r24
    2294:	97 fb       	bst	r25, 7
    2296:	99 1f       	adc	r25, r25
    2298:	61 f0       	breq	.+24     	; 0x22b2 <__fp_splitA+0x20>
    229a:	9f 3f       	cpi	r25, 0xFF	; 255
    229c:	79 f0       	breq	.+30     	; 0x22bc <__fp_splitA+0x2a>
    229e:	87 95       	ror	r24
    22a0:	08 95       	ret
    22a2:	12 16       	cp	r1, r18
    22a4:	13 06       	cpc	r1, r19
    22a6:	14 06       	cpc	r1, r20
    22a8:	55 1f       	adc	r21, r21
    22aa:	f2 cf       	rjmp	.-28     	; 0x2290 <__fp_split3+0xe>
    22ac:	46 95       	lsr	r20
    22ae:	f1 df       	rcall	.-30     	; 0x2292 <__fp_splitA>
    22b0:	08 c0       	rjmp	.+16     	; 0x22c2 <__fp_splitA+0x30>
    22b2:	16 16       	cp	r1, r22
    22b4:	17 06       	cpc	r1, r23
    22b6:	18 06       	cpc	r1, r24
    22b8:	99 1f       	adc	r25, r25
    22ba:	f1 cf       	rjmp	.-30     	; 0x229e <__fp_splitA+0xc>
    22bc:	86 95       	lsr	r24
    22be:	71 05       	cpc	r23, r1
    22c0:	61 05       	cpc	r22, r1
    22c2:	08 94       	sec
    22c4:	08 95       	ret

000022c6 <__fp_zero>:
    22c6:	e8 94       	clt

000022c8 <__fp_szero>:
    22c8:	bb 27       	eor	r27, r27
    22ca:	66 27       	eor	r22, r22
    22cc:	77 27       	eor	r23, r23
    22ce:	cb 01       	movw	r24, r22
    22d0:	97 f9       	bld	r25, 7
    22d2:	08 95       	ret

000022d4 <__gesf2>:
    22d4:	0e 94 f5 10 	call	0x21ea	; 0x21ea <__fp_cmp>
    22d8:	08 f4       	brcc	.+2      	; 0x22dc <__gesf2+0x8>
    22da:	8f ef       	ldi	r24, 0xFF	; 255
    22dc:	08 95       	ret

000022de <__mulsf3>:
    22de:	0e 94 82 11 	call	0x2304	; 0x2304 <__mulsf3x>
    22e2:	0c 94 30 11 	jmp	0x2260	; 0x2260 <__fp_round>
    22e6:	0e 94 22 11 	call	0x2244	; 0x2244 <__fp_pscA>
    22ea:	38 f0       	brcs	.+14     	; 0x22fa <__mulsf3+0x1c>
    22ec:	0e 94 29 11 	call	0x2252	; 0x2252 <__fp_pscB>
    22f0:	20 f0       	brcs	.+8      	; 0x22fa <__mulsf3+0x1c>
    22f2:	95 23       	and	r25, r21
    22f4:	11 f0       	breq	.+4      	; 0x22fa <__mulsf3+0x1c>
    22f6:	0c 94 19 11 	jmp	0x2232	; 0x2232 <__fp_inf>
    22fa:	0c 94 1f 11 	jmp	0x223e	; 0x223e <__fp_nan>
    22fe:	11 24       	eor	r1, r1
    2300:	0c 94 64 11 	jmp	0x22c8	; 0x22c8 <__fp_szero>

00002304 <__mulsf3x>:
    2304:	0e 94 41 11 	call	0x2282	; 0x2282 <__fp_split3>
    2308:	70 f3       	brcs	.-36     	; 0x22e6 <__mulsf3+0x8>

0000230a <__mulsf3_pse>:
    230a:	95 9f       	mul	r25, r21
    230c:	c1 f3       	breq	.-16     	; 0x22fe <__mulsf3+0x20>
    230e:	95 0f       	add	r25, r21
    2310:	50 e0       	ldi	r21, 0x00	; 0
    2312:	55 1f       	adc	r21, r21
    2314:	62 9f       	mul	r22, r18
    2316:	f0 01       	movw	r30, r0
    2318:	72 9f       	mul	r23, r18
    231a:	bb 27       	eor	r27, r27
    231c:	f0 0d       	add	r31, r0
    231e:	b1 1d       	adc	r27, r1
    2320:	63 9f       	mul	r22, r19
    2322:	aa 27       	eor	r26, r26
    2324:	f0 0d       	add	r31, r0
    2326:	b1 1d       	adc	r27, r1
    2328:	aa 1f       	adc	r26, r26
    232a:	64 9f       	mul	r22, r20
    232c:	66 27       	eor	r22, r22
    232e:	b0 0d       	add	r27, r0
    2330:	a1 1d       	adc	r26, r1
    2332:	66 1f       	adc	r22, r22
    2334:	82 9f       	mul	r24, r18
    2336:	22 27       	eor	r18, r18
    2338:	b0 0d       	add	r27, r0
    233a:	a1 1d       	adc	r26, r1
    233c:	62 1f       	adc	r22, r18
    233e:	73 9f       	mul	r23, r19
    2340:	b0 0d       	add	r27, r0
    2342:	a1 1d       	adc	r26, r1
    2344:	62 1f       	adc	r22, r18
    2346:	83 9f       	mul	r24, r19
    2348:	a0 0d       	add	r26, r0
    234a:	61 1d       	adc	r22, r1
    234c:	22 1f       	adc	r18, r18
    234e:	74 9f       	mul	r23, r20
    2350:	33 27       	eor	r19, r19
    2352:	a0 0d       	add	r26, r0
    2354:	61 1d       	adc	r22, r1
    2356:	23 1f       	adc	r18, r19
    2358:	84 9f       	mul	r24, r20
    235a:	60 0d       	add	r22, r0
    235c:	21 1d       	adc	r18, r1
    235e:	82 2f       	mov	r24, r18
    2360:	76 2f       	mov	r23, r22
    2362:	6a 2f       	mov	r22, r26
    2364:	11 24       	eor	r1, r1
    2366:	9f 57       	subi	r25, 0x7F	; 127
    2368:	50 40       	sbci	r21, 0x00	; 0
    236a:	9a f0       	brmi	.+38     	; 0x2392 <__mulsf3_pse+0x88>
    236c:	f1 f0       	breq	.+60     	; 0x23aa <__mulsf3_pse+0xa0>
    236e:	88 23       	and	r24, r24
    2370:	4a f0       	brmi	.+18     	; 0x2384 <__mulsf3_pse+0x7a>
    2372:	ee 0f       	add	r30, r30
    2374:	ff 1f       	adc	r31, r31
    2376:	bb 1f       	adc	r27, r27
    2378:	66 1f       	adc	r22, r22
    237a:	77 1f       	adc	r23, r23
    237c:	88 1f       	adc	r24, r24
    237e:	91 50       	subi	r25, 0x01	; 1
    2380:	50 40       	sbci	r21, 0x00	; 0
    2382:	a9 f7       	brne	.-22     	; 0x236e <__mulsf3_pse+0x64>
    2384:	9e 3f       	cpi	r25, 0xFE	; 254
    2386:	51 05       	cpc	r21, r1
    2388:	80 f0       	brcs	.+32     	; 0x23aa <__mulsf3_pse+0xa0>
    238a:	0c 94 19 11 	jmp	0x2232	; 0x2232 <__fp_inf>
    238e:	0c 94 64 11 	jmp	0x22c8	; 0x22c8 <__fp_szero>
    2392:	5f 3f       	cpi	r21, 0xFF	; 255
    2394:	e4 f3       	brlt	.-8      	; 0x238e <__mulsf3_pse+0x84>
    2396:	98 3e       	cpi	r25, 0xE8	; 232
    2398:	d4 f3       	brlt	.-12     	; 0x238e <__mulsf3_pse+0x84>
    239a:	86 95       	lsr	r24
    239c:	77 95       	ror	r23
    239e:	67 95       	ror	r22
    23a0:	b7 95       	ror	r27
    23a2:	f7 95       	ror	r31
    23a4:	e7 95       	ror	r30
    23a6:	9f 5f       	subi	r25, 0xFF	; 255
    23a8:	c1 f7       	brne	.-16     	; 0x239a <__mulsf3_pse+0x90>
    23aa:	fe 2b       	or	r31, r30
    23ac:	88 0f       	add	r24, r24
    23ae:	91 1d       	adc	r25, r1
    23b0:	96 95       	lsr	r25
    23b2:	87 95       	ror	r24
    23b4:	97 f9       	bld	r25, 7
    23b6:	08 95       	ret

000023b8 <__itoa_ncheck>:
    23b8:	bb 27       	eor	r27, r27
    23ba:	4a 30       	cpi	r20, 0x0A	; 10
    23bc:	31 f4       	brne	.+12     	; 0x23ca <__itoa_ncheck+0x12>
    23be:	99 23       	and	r25, r25
    23c0:	22 f4       	brpl	.+8      	; 0x23ca <__itoa_ncheck+0x12>
    23c2:	bd e2       	ldi	r27, 0x2D	; 45
    23c4:	90 95       	com	r25
    23c6:	81 95       	neg	r24
    23c8:	9f 4f       	sbci	r25, 0xFF	; 255
    23ca:	0c 94 e8 11 	jmp	0x23d0	; 0x23d0 <__utoa_common>

000023ce <__utoa_ncheck>:
    23ce:	bb 27       	eor	r27, r27

000023d0 <__utoa_common>:
    23d0:	fb 01       	movw	r30, r22
    23d2:	55 27       	eor	r21, r21
    23d4:	aa 27       	eor	r26, r26
    23d6:	88 0f       	add	r24, r24
    23d8:	99 1f       	adc	r25, r25
    23da:	aa 1f       	adc	r26, r26
    23dc:	a4 17       	cp	r26, r20
    23de:	10 f0       	brcs	.+4      	; 0x23e4 <__utoa_common+0x14>
    23e0:	a4 1b       	sub	r26, r20
    23e2:	83 95       	inc	r24
    23e4:	50 51       	subi	r21, 0x10	; 16
    23e6:	b9 f7       	brne	.-18     	; 0x23d6 <__utoa_common+0x6>
    23e8:	a0 5d       	subi	r26, 0xD0	; 208
    23ea:	aa 33       	cpi	r26, 0x3A	; 58
    23ec:	08 f0       	brcs	.+2      	; 0x23f0 <__utoa_common+0x20>
    23ee:	a9 5d       	subi	r26, 0xD9	; 217
    23f0:	a1 93       	st	Z+, r26
    23f2:	00 97       	sbiw	r24, 0x00	; 0
    23f4:	79 f7       	brne	.-34     	; 0x23d4 <__utoa_common+0x4>
    23f6:	b1 11       	cpse	r27, r1
    23f8:	b1 93       	st	Z+, r27
    23fa:	11 92       	st	Z+, r1
    23fc:	cb 01       	movw	r24, r22
    23fe:	0c 94 01 12 	jmp	0x2402	; 0x2402 <strrev>

00002402 <strrev>:
    2402:	dc 01       	movw	r26, r24
    2404:	fc 01       	movw	r30, r24
    2406:	67 2f       	mov	r22, r23
    2408:	71 91       	ld	r23, Z+
    240a:	77 23       	and	r23, r23
    240c:	e1 f7       	brne	.-8      	; 0x2406 <strrev+0x4>
    240e:	32 97       	sbiw	r30, 0x02	; 2
    2410:	04 c0       	rjmp	.+8      	; 0x241a <strrev+0x18>
    2412:	7c 91       	ld	r23, X
    2414:	6d 93       	st	X+, r22
    2416:	70 83       	st	Z, r23
    2418:	62 91       	ld	r22, -Z
    241a:	ae 17       	cp	r26, r30
    241c:	bf 07       	cpc	r27, r31
    241e:	c8 f3       	brcs	.-14     	; 0x2412 <strrev+0x10>
    2420:	08 95       	ret

00002422 <_exit>:
    2422:	f8 94       	cli

00002424 <__stop_program>:
    2424:	ff cf       	rjmp	.-2      	; 0x2424 <__stop_program>
